{
	"info": {
		"_postman_id": "0e9bfb05-2451-4182-ba74-408518ff9aa2",
		"name": "finan_65_manual_create_ekyc_for_business",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33255019"
	},
	"item": [
		{
			"name": "verify_phone_number",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// random number between min and max",
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"// ============================= random phone number",
							"let randomPhone = () => {",
							"    let phoneNumber = \"\";",
							"    let viettel = ['86','96','97','98','32','33','34','35','36','37','38','39'];",
							"    let vina = ['88','81','82','83','84','85','91','94'];",
							"    let mobi = ['89','90','93','70','76','77','78','79'];",
							"    let vinamobile = ['92','56','58'];",
							"    let gmobile = ['99','59'];",
							"    let itelecom = ['87'];",
							"    let phoneFormat = ['0'];//'+84','0'",
							"    phoneNumber += phoneFormat[getRandomInt(0,phoneFormat.length - 1)];",
							"    let allNet = [...viettel,...vina,...mobi,...vinamobile,...gmobile,...itelecom];",
							"    phoneNumber += allNet[getRandomInt(0,allNet.length)];",
							"    for(let i = 0; i < 7; i++){",
							"        phoneNumber += getRandomInt(0,9);",
							"    }",
							"    return phoneNumber;",
							"}",
							"",
							"let phone_number = randomPhone(5) ;",
							"",
							"let payload = {",
							"    \"phone_number\": phone_number,",
							"    \"email_login\": \"\"",
							"};",
							"",
							"pm.environment.set(\"V-payload\", JSON.stringify(payload));",
							"pm.environment.set(\"V-phone-number\", phone_number);",
							"console.log(\"phone_number\", phone_number);",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsData = pm.response.json();",
							"if(pm.response.code == 200){",
							"    postman.setNextRequest(\"signup_request_otp\"); // signup_request_otp",
							"",
							"} else {",
							"    console.log(\"Can't get email, end test\", jsData);",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{V-payload}}"
				},
				"url": {
					"raw": "{{finan_base_url}}/finan-user/api/v1/auth/account/verify",
					"host": [
						"{{finan_base_url}}"
					],
					"path": [
						"finan-user",
						"api",
						"v1",
						"auth",
						"account",
						"verify"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup_request_otp",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// random number between min and max",
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"//random characters",
							"function randomChars(length) {",
							"    var result = '';",
							"    var characters = 'HGFJHFHHGFYTFUYGIUAHHJGUYKGKUI8972492';",
							"    var charactersLength = characters.length;",
							"    for (var i = 0; i < length; i++) {",
							"        result += characters.charAt(Math.floor(Math.random() * charactersLength));",
							"    }",
							"    return result;",
							"}",
							"",
							"// Lấy giá trị của biến môi trường 'V-payload'",
							"// let payloadString = pm.environment.get(\"V-payload\");",
							"// let payload = JSON.parse(payloadString); // Chuyển chuỗi JSON thành đối tượng JavaScript",
							"",
							"let phone_number = pm.environment.get(\"V-phone-number\");",
							"// console.log(\"email\", email_login);",
							"// let password = pm.environment.get(\"pwd\");",
							"",
							"// Tạo payload mới",
							"let newPayload = {",
							"    \"phone_number\": phone_number,",
							"    \"pwd\": \"c72ff329ab6518632d9a5178cfbf7329a120fcecb068c811216f6a8c792ab6dd61f9\",// pwd: q12345",
							"    \"platform\": \"pro_web\",",
							"    \"device_id\": \"94535864-7695-49a7-b424-d3b0e1b53178\",",
							"    \"action\": \"create_account\",",
							"    \"user_name\": \"[API test]\" +  randomChars(4),",
							"    \"email_login\": \"\"",
							"}",
							"",
							"// Đặt payload mới vào môi trường Postman",
							"pm.environment.set(\"V-newPayload\", JSON.stringify(newPayload));",
							"console.log(\"Signup request OTP payload (pwd: q12345)\", newPayload);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsData = pm.response.json();",
							"if(pm.response.code == 200){",
							"    postman.setNextRequest(\"confirm_otp\"); // confirm_otp",
							"",
							"} else {",
							"    console.log(\"Can't get email, end test\", jsData);",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{V-newPayload}}"
				},
				"url": {
					"raw": "{{finan_base_url}}/finan-user/api/v1/auth/account/request",
					"host": [
						"{{finan_base_url}}"
					],
					"path": [
						"finan-user",
						"api",
						"v1",
						"auth",
						"account",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "confirm_otp",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// random number between min and max",
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"//random characters",
							"function randomChars(length) {",
							"    var result = '';",
							"    var characters = 'HGFJHFHHGFYTFUYGIUAHHJGUYKGKUI8972492';",
							"    var charactersLength = characters.length;",
							"    for (var i = 0; i < length; i++) {",
							"        result += characters.charAt(Math.floor(Math.random() * charactersLength));",
							"    }",
							"    return result;",
							"}",
							"",
							"// Lấy giá trị của biến môi trường 'V-payload'",
							"// let payloadString = pm.environment.get(\"V-payload\");",
							"// let payload = JSON.parse(payloadString); // Chuyển chuỗi JSON thành đối tượng JavaScript",
							"",
							"let phone_number = pm.environment.get(\"V-phone-number\");",
							"// console.log(\"email\", email_login);",
							"// let password = pm.environment.get(\"pwd\");",
							"",
							"// Tạo payload mới",
							"let newPayload = {",
							"  \"phone_number\": phone_number,",
							"  \"email_login\": \"\",",
							"  \"device_id\": \"94535864-7695-49a7-b424-d3b0e1b53178\",",
							"  \"platform\": \"pro_web\",",
							"  \"business_name\": \"[API test]\" +  randomChars(4),",
							"  \"otp\": \"1207\",",
							"  \"action\": \"create_account\",",
							"  \"app_version\": \"1.1.1\",",
							"  \"device_name\": \"desktop\",",
							"  \"remember_me\": true",
							"}",
							"",
							"// Đặt payload mới vào môi trường Postman",
							"pm.environment.set(\"V-newPayload\", JSON.stringify(newPayload));",
							"console.log(\"Confirm OTP payload\", newPayload);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsData = pm.response.json();",
							"if(pm.response.code == 200){",
							"    let userToken = jsData.data.token;",
							"    pm.environment.set(\"V-userToken\",userToken);",
							"    postman.setNextRequest(\"create_kyc\"); // create_kyc",
							"",
							"} else {",
							"    console.log(\"Can't get email, end test\", jsData);",
							"    postman.setNextRequest(null);",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{V-newPayload}}"
				},
				"url": {
					"raw": "{{finan_base_url}}/finan-user/api/v2/auth/account/confirm",
					"host": [
						"{{finan_base_url}}"
					],
					"path": [
						"finan-user",
						"api",
						"v2",
						"auth",
						"account",
						"confirm"
					]
				}
			},
			"response": []
		},
		{
			"name": "create_kyc",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// random number between min and max",
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"//random characters",
							"function randomChars(length) {",
							"    var result = '';",
							"    var characters = 'HGFJHFHHGFYTFUYGIUAHHJGUYKGKUI8972492';",
							"    var charactersLength = characters.length;",
							"    for (var i = 0; i < length; i++) {",
							"        result += characters.charAt(Math.floor(Math.random() * charactersLength));",
							"    }",
							"    return result;",
							"}",
							"//random num",
							"function randomNum(length) {",
							"    var result = '';",
							"    var number = '9846723643892798237548237582734805734075234579678934235457567';",
							"    var numberLength = number.length;",
							"    for (var i = 0; i < length; i++) {",
							"        // Thay `charactersLength` bằng `numberLength`",
							"        result += number.charAt(Math.floor(Math.random() * numberLength));",
							"    }",
							"    return result;",
							"}",
							"",
							"",
							"// Lấy giá trị của biến môi trường 'V-payload'",
							"// let payloadString = pm.environment.get(\"V-payload\");",
							"// let payload = JSON.parse(payloadString); // Chuyển chuỗi JSON thành đối tượng JavaScript",
							"",
							"let phone_number = pm.environment.get(\"V-phone-number\");",
							"// console.log(\"email\", email_login);",
							"// let password = pm.environment.get(\"pwd\");",
							"",
							"// Tạo payload mới",
							"let newPayload = {",
							"    \"va_name\": \"[API test]\" +  randomChars(4),",
							"    \"name\": \"[API test]\" +  randomChars(4),",
							"    \"email\": randomChars(4) + \"@mailinator.com\",",
							"    \"phone_number\": phone_number,",
							"    \"tax_code\": randomNum(13),",
							"    \"description\": \"[API test]\" +  randomChars(4),",
							"    \"address_info\": {",
							"        \"full_address\": \"QC test địa chỉ doanh nghiệp, Xã Chiềng Hặc, Huyện Yên Châu, Tỉnh Sơn La\",",
							"        \"country_id\": \"VN\",",
							"        \"province_id\": \"14_v2\",",
							"        \"district_id\": \"124_v2\",",
							"        \"ward_id\": \"04078_v2\"",
							"    },",
							"    \"sme_owner\": {",
							"        \"id_card\": randomNum(12),",
							"        \"name\": \"[API test]\" +  randomChars(4),",
							"        \"phone_number\": phone_number,",
							"        \"dob\": \"1990-07-31T17:00:00.000Z\",",
							"        \"sex\": \"male\",",
							"        \"front_identification\": \"https://d3hr4eej8cfgwy.cloudfront.net/finan-dev/28e23585-c1e8-49e7-ab3f-5e49dad82a10/image/73495c6e-cdee-47f4-9c6c-fadaeee75917.jpg\",",
							"        \"end_identification\": \"https://d3hr4eej8cfgwy.cloudfront.net/finan-dev/28e23585-c1e8-49e7-ab3f-5e49dad82a10/image/d674d341-6ac5-4f33-91a6-c81770b4ec3d.jpg\",",
							"        \"email\": randomChars(4) + \"@mailinator.com\",",
							"        \"address_info\": {",
							"        \"full_address\": \"QC test địa chỉ sở hữu, Xã Chiềng On, Huyện Yên Châu, Tỉnh Sơn La\",",
							"        \"country_id\": \"VN\",",
							"        \"province_id\": \"14_v2\", ",
							"        \"district_id\": \"124_v2\",",
							"        \"ward_id\": \"04084_v2\"",
							"        }",
							"    },",
							"    \"registration_certificate\": [\"https://d3hr4eej8cfgwy.cloudfront.net/finan-dev/28e23585-c1e8-49e7-ab3f-5e49dad82a10/image/062e6b24-fdc3-4f08-9c8d-90d05ea35b1b.jpeg\"],",
							"    \"beneficiary_accounts\": [",
							"        {",
							"        \"account_name\": \"NGUYEN NGOC SON\",",
							"        \"account_number\": \"700071059955\",",
							"        \"bank_code\": \"616\"",
							"        }",
							"  ]",
							"}",
							"",
							"// Đặt payload mới vào môi trường Postman",
							"pm.environment.set(\"V-newPayload\", JSON.stringify(newPayload));",
							"console.log(\"KYC request newPayload\", newPayload);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsData = pm.response.json();",
							"if(pm.response.code == 200){",
							"    let testcase = pm.environment.get(\"C-testcase\");",
							"    testcase++;",
							"    pm.environment.set(\"C-testcase\",testcase);",
							"",
							"} else {",
							"    console.log(\"Can't create new kyc, end test\", jsData);",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authorization",
						"value": "Bearer {{V-userToken}}"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{V-newPayload}}"
				},
				"url": {
					"raw": "{{finan_base_url}}/banking-account-management/api/v1/sme/onboard-request",
					"host": [
						"{{finan_base_url}}"
					],
					"path": [
						"banking-account-management",
						"api",
						"v1",
						"sme",
						"onboard-request"
					]
				}
			},
			"response": []
		}
	]
}