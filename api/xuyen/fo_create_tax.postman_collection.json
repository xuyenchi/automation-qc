{
	"info": {
		"_postman_id": "f3e48cf5-16d5-435b-a71e-96b396150e13",
		"name": "fo_create_tax",
		"description": "1. Login (lấy token, business id)\n    \n2. Get data\n    \n    1. Get list tax : lưu total rows\n        \n3. Create tax\n    \n    1. Unhappy case 1:\n        \n    2. Unhappy case 2:\n        \n    3. Happy case\n        \n4. Check data\n    \n    1. Get list tax :   ✓  Check new tax name in listing correct  ✓  Check new tax rate in listing correct  ✓  Check new tax desc in listing correct  ✓  Check total tax increase 1 item  ✓  Check total id exist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17535207",
		"_collection_link": "https://warped-spaceship-122945.postman.co/workspace/Learn_API_Testing~870ffb9e-5962-40b3-8d91-530fbf3c4242/collection/17535207-f3e48cf5-16d5-435b-a71e-96b396150e13?action=share&source=collection_link&creator=17535207"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();",
							"pm.environment.set(\"x-token\",responseJson.data.access_token);",
							"//console.log(responseJson.data.access_token);",
							"",
							"pm.test('Verify Status code is 200', function () {",
							"pm.response.to.have.status(200);",
							"});",
							"let testcase = 2;",
							"pm.environment.set(\"testcase\", testcase);",
							"postman.setNextRequest(\"get_list_tax\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let payload = {",
							"    \"phone_number\": \"+84327007131\",",
							"    \"email\": \"\",",
							"    \"username\": \"\",",
							"    \"encrypted_password\": \"0231e744220687628f15b0ea82e65b49936245fd6759eb1a62034f386e265707c80a\",",
							"    \"device_info\": {",
							"        \"id\": \"2e1d16e4-d289-4aba-8ddf-f625a0615b893\",",
							"        \"name\": \"desktop\",",
							"        \"os\": \"MacOS\"",
							"    },",
							"    \"app_version\": \"1.1.1\",",
							"    \"platform_key\": \"desktop-web\"",
							"}",
							"pm.environment.set(\"payload\", JSON.stringify(payload));",
							"",
							"let testcase = 1;",
							"pm.environment.set(\"testcase\", testcase);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "origin",
						"value": "https://id-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://id-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale-code",
						"value": "en_US"
					},
					{
						"key": "x-location-timezone",
						"value": "UTC+07:00"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{finone_url}}/fo-user/api/v1/auth/login",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-user",
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_tax",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();",
							"let page = pm.environment.get(\"page\");",
							"let total_page = responseData.meta.total_pages;",
							"",
							"let testcase = pm.environment.get(\"testcase\");",
							"switch(testcase){",
							"       case 2:",
							"        let list_tax = pm.environment.get(\"list_tax\");",
							"        if(!list_tax)",
							"            list_tax = [];",
							"        for(let i in responseData.data){",
							"            list_tax.push",
							"                ({",
							"                    \"tax_id\": responseData.data[i].id,",
							"                    \"tax_name\": responseData.data[i].name,",
							"                    \"tax_desc\" : responseData.data[i].description",
							"                });",
							"        }",
							"        pm.environment.set(\"list_tax\", list_tax);",
							"",
							"      ",
							"        if( page >= total_page){",
							"            pm.environment.unset(\"page\");",
							"            //lưu lại các thông tin",
							"            pm.environment.set(\"total_page\", total_page);",
							"            console.log(list_tax);",
							"            pm.environment.set(\"total_item\", list_tax.length);",
							"            console.log(\"my leng :\" + pm.environment.get(\"total_item\"));",
							"            //pm.environment.unset(\"total_item\");",
							"            postman.setNextRequest(\"create_tax\");",
							"        }",
							"        else{",
							"            page++;",
							"            pm.environment.set(\"page\", page);",
							"            postman.setNextRequest(\"get_list_tax\");",
							"        }",
							"        break;",
							"    case 4:",
							"        let isExistId = false;",
							"        let index = -1;",
							"        for(let i = 0; i < responseData.data.length; i++ ){",
							"            if(pm.environment.get(\"tax_id\") == responseData.data[i].id)",
							"            {",
							"                isExistId = true;",
							"                index = i;",
							"                pm.test('Check new tax name in listing',function(){",
							"                        pm.expect(pm.environment.get(\"tax-name\"), responseData.data[index].name);",
							"                    });",
							"",
							"                    pm.test('Check new tax rate in listing ',function(){",
							"                            pm.expect(pm.environment.get(\"tax-rate\"), responseData.data[index].rate);",
							"                    });",
							"",
							"                    pm.test('Check new tax desc in listing',function(){",
							"                            pm.expect(pm.environment.get(\"description\"), responseData.data[index].description);",
							"                    });      ",
							"            }",
							"        }        ",
							"          if( page >= total_page || isExistId == true){",
							"            pm.test('New product create success', function(){",
							"                pm.expect(isExistId).to.be.true;",
							"            });",
							"            pm.test('Check list +1 item', function(){",
							"                pm.expect(pm.environment.get(\"total_item\") + 1 == responseData.meta.total_rows);",
							"            });",
							"            pm.environment.unset(\"page\");",
							"            postman.setNextRequest(\"\");",
							"        }",
							"        else{",
							"            page++;",
							"            pm.environment.set(\"page\", page);",
							"            postman.setNextRequest(\"get_list_tax\");",
							"        }",
							"        break;",
							"    default:",
							"}",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let page = pm.environment.get(\"page\");",
							"let page_size = 10;",
							"",
							"if(!page)",
							"    page = 1;",
							"",
							"pm.environment.set(\"page\", page);",
							"pm.environment.set(\"page_size\", page_size);",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\""
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					},
					{
						"key": "x-locale-code",
						"value": "en_US"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "authorization",
						"value": "Bearer {{x-token}}"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "https://pos-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-business/api/v1/tax/get-list?page={{page}}&page_size={{page_size}}&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-business",
						"api",
						"v1",
						"tax",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "{{page}}"
						},
						{
							"key": "page_size",
							"value": "{{page_size}}"
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create_tax",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//hàm random từ lớn hơn 0 - 100",
							"function getRandomNumber() {",
							"    let number;",
							"    do{",
							"        number = Math.random() * 100;",
							"    }while(number === 0);",
							"    return number;",
							"}   ",
							"",
							"//hàm random ký tự ngẫu nhiên",
							"function generateRndomChars(length) {",
							"    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++){",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));",
							"    }",
							"    return result;",
							"}",
							"",
							"",
							"let rate = getRandomNumber();",
							"let name = '[taxname] Xuyen - ' + generateRndomChars(5);",
							"let description = 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque';",
							"",
							"pm.environment.set(\"tax-rate\", rate);",
							"pm.environment.set(\"tax-name\", name);",
							"pm.environment.set(\"description\", description);",
							"",
							"let payload = {",
							"    \"name\": pm.environment.get(\"tax-name\"),",
							"    \"rate\": pm.environment.get(\"tax-rate\"),",
							"    \"description\": pm.environment.get(\"description\"),",
							"    \"business_id\": 20",
							"}",
							"pm.environment.set(\"payload\", JSON.stringify(payload));",
							"",
							"console.log(\"rate:\" + rate);",
							"console.log('name:' + name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();",
							"let tax_id = responseData.data.id;",
							"pm.environment.set(\"tax_id\", tax_id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify tax name correct\", function() {",
							"    pm.expect(responseData.data.name).to.eql(pm.environment.get(\"tax-name\"));",
							"});",
							"",
							"pm.test(\"Verify tax rate correct\", function() {",
							"    pm.expect(responseData.data.rate).to.eql(pm.environment.get(\"tax-rate\"));",
							"});",
							"",
							"pm.test(\"Verify tax desc correct\", function() {",
							"    pm.expect(responseData.data.description).to.eql(pm.environment.get(\"description\"));",
							"});",
							"",
							"let testcase = 4;",
							"pm.environment.set(\"testcase\", testcase);",
							"postman.setNextRequest(\"get_list_tax\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\""
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					},
					{
						"key": "x-locale-code",
						"value": "en_US"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiZDE1NDY4YzgtODg1MS00NTEwLWFjN2UtMzk4MjQwZDg0M2VmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI0MzM2MDY1LCJuYmYiOjE3MjE3NDQwNjUsImlhdCI6MTcyMTc0NDA2NSwib3JnX2lkIjoiMjAiLCJidXNpbmVzc19pZCI6IjIwIiwiZGV2aWNlX2lkIjoiMmUxZDE2ZTQtZDI4OS00YWJhLThkZGYtZjYyNWEwNjE1Yjg5IiwicGxhdGZvcm1fa2V5IjoiZGVza3RvcC13ZWIiLCJ1c2VyX2lkIjoiZDE1NDY4YzgtODg1MS00NTEwLWFjN2UtMzk4MjQwZDg0M2VmIiwibG9naW5fbWV0aG9kIjoicGFzc3dvcmQiLCJhcHBfdmVyc2lvbiI6IjEuMS4xIiwic2VjdXJpdHlfcm9sZSI6MCwicmVmcmVzaF90b2tlbl9pZCI6IjUyNDY0YWEyLWI0YTktNGEzMC1hMTU1LWYwNWQwNjAwNDVjMCJ9.x_41pLISIikibEWM8-MMtGUQ41wTYhdd9IJyxBTkiPo"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Referer",
						"value": "https://pos-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{finone_url}}/fo-business/api/v1/tax/create",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-business",
						"api",
						"v1",
						"tax",
						"create"
					]
				}
			},
			"response": []
		}
	]
}