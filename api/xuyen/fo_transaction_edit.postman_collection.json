{
	"info": {
		"_postman_id": "005c7490-e113-4a42-831a-7bdc4c774acd",
		"name": "fo_transaction_edit",
		"description": "1. Login\n    \n    1. Lấy token\n        \n2. Get data\n    \n    1. get list transaction: Lấy transaction id muốn edit, Lấy thông tin tương ứng với transaction đó : số tiền, ngày giao dịch, quỹ tiền, phân loại, khách hàng, chi nhánh, ghi chú, file đính kèm\n        \n    2. Get list quỹ tiền: Get list quỹ tiền, Lấy ra quỹ tiền khác với quỹ tiền id transaction edit\n        \n    3. Get list phân loại: Get list phân loại, Lấy phân loại khác với phân loại id transaction edit\n        \n    4. Get list khách hàng: Get list KH, Lấy KH khác với KH của id transaction edit\n        \n    5. Get list chi nhánh :Get list CN, Lấy CN khách với CN của id transaction edit\n        \n    6. Get list tax : get list tax, lấy tax khác với tax muốn edit\n        \n3. Edit transaction\n    \n    1. Happy case : Update số tiền, ngày giao dịch, quỹ tiền, phân loại, khách hàng, CN, ghi chú\n        \n    2. Thông tin transaction thu mới được cập nhật : số tiền, ngày giao dịch, quỹ tiền, phân loại, khách hàng, CN, ghi chú, thuế, file\n        \n4. Check data sau khi update\n    \n    1. Get list transaction : total item k đổi, so sánh data update\n        \n    2. Transaction detail\n        \n    3. Check quỹ cũ\n        \n    4. Check quỹ mới\n        \n    5. Check nợ của KH cũ tăng lên (dùng api contact)\n        \n    6. Check nợ KH mới giảm xuống (dùng api contact)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17535207",
		"_collection_link": "https://warped-spaceship-122945.postman.co/workspace/Learn_API_Testing~870ffb9e-5962-40b3-8d91-530fbf3c4242/collection/17535207-005c7490-e113-4a42-831a-7bdc4c774acd?action=share&source=collection_link&creator=17535207"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let payload = {",
							"    \"phone_number\": \"+84327007131\",",
							"    \"email\": \"\",",
							"    \"username\": \"\",",
							"    \"encrypted_password\": \"37b1e48a56c69971b4e0dd0ec95cf32491dd27d73d77eb6337c6290c3e6236920126\",",
							"    \"device_info\": {",
							"        \"id\": \"2e1d16e4-d289-4aba-8ddf-f625a0615b893\",",
							"        \"name\": \"desktop\",",
							"        \"os\": \"MacOS\"",
							"    },",
							"    \"app_version\": \"1.1.1\",",
							"    \"platform_key\": \"desktop-web\"",
							"}",
							"pm.environment.set(\"payload\", JSON.stringify(payload));",
							"",
							"let testcase = 1;",
							"pm.environment.set(\"testcase\", testcase);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();",
							"pm.environment.set(\"X-token\",responseJson.data.access_token);",
							"",
							"pm.test('Verify Status code is 200', function () {",
							"pm.response.to.have.status(200);",
							"});",
							"",
							"let testcase = 2;",
							"pm.environment.set(\"testcase\", testcase);",
							"",
							"postman.setNextRequest(\"get_list_transaction\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "origin",
						"value": "https://id-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://id-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale-code",
						"value": "en_US"
					},
					{
						"key": "x-location-timezone",
						"value": "UTC+07:00"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{finone_url}}/fo-user/api/v1/auth/login",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-user",
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"let responeData = pm.response.json();",
							"let page = pm.environment.get(\"page\");",
							"let testcase = pm.environment.get(\"testcase\");",
							"switch(testcase){",
							"    case 2:",
							"        //chú ý ",
							"        let list_transaction = pm.environment.get(\"list_transaction\");",
							"        if(!list_transaction)",
							"            list_transaction = [];",
							"        //chú ý",
							"        for(let i in responeData.data){",
							"            list_transaction.push(",
							"                {",
							"                    \"id\" : responeData.data[i].id,",
							"                    \"amount\" : responeData.data[i].amount,",
							"                    \"branch_id\" : responeData.data[i].branch_id,",
							"      ",
							"      ",
							"                    \"txt_type\" : responeData.data[i].txn_type,",
							"                    \"is_txn_bank\" : responeData.data[i].is_txn_bank,",
							"                    \"contact_id\" : responeData.data[i].contact_id,",
							"                    \"value_at\": responeData.data[i].value_at,",
							"                    \"tax_id\" : responeData.data[i].tax_id,",
							"                    \"tax_amount\" : responeData.data[i].tax_amount,",
							"                    \"account_id\" : responeData.data[i].account.id,",
							"                    \"category_id\" : responeData.data[i].category_id,",
							"                    \"description\" : responeData.data[i].description,",
							"                    \"is_internal_transfer\" : responeData.data[i].is_internal_transfer",
							"",
							"                }",
							"            );",
							"        }",
							"        pm.environment.set(\"list_transaction\", list_transaction);",
							"",
							"        if(page >= responeData.meta.total_pages ){",
							"            pm.environment.unset(\"page\");",
							"",
							"            let index;",
							"            do{",
							"                 index = getRandomInt(0, list_transaction.length - 1 );",
							"                // console.log('transaction id test:'+ list_transaction[index].id);",
							"            } while(list_transaction[index].txt_type != 'in'|| list_transaction[index].is_txn_bank!= false || list_transaction[index].is_internal_transfer == true);",
							"            ",
							"            let transaction_edited = list_transaction[index];",
							"            pm.environment.set(\"transaction_edited\", transaction_edited);",
							"            //console.log(\"transaction edit id : \" + transaction_edited.id);",
							"",
							"            //khai bao 1 transaction rong de fill cac field muon update vao",
							"            let transaction_updated =",
							"             {",
							"                    \"id\" : list_transaction[index].id,",
							"                    \"amount\" : null,",
							"                    \"branch_id\" : null,",
							"                    \"txt_type\" : list_transaction[index].txn_type,",
							"                    \"is_txn_bank\" : list_transaction[index].is_txn_bank,",
							"                    \"contact_id\" : null,",
							"                    \"value_at\": list_transaction[index].value_at,",
							"                    \"tax_id\" : null,",
							"                    \"tax_amount\" : null,",
							"                    \"account_id\" : null,",
							"                    \"category_id\" : null,",
							"                    \"description\" : null",
							"",
							"                }",
							"            pm.environment.set(\"transaction_updated\", transaction_updated);",
							"",
							"            postman.setNextRequest(\"get_list_fund\");",
							"        }",
							"",
							"        else{",
							"            page++;",
							"            pm.environment.set(\"page\", page);",
							"            postman.setNextRequest(\"get_list_transaction\");",
							"        }",
							"        break;",
							"    case 4:",
							"        let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"        for(let i in responeData.data){",
							"            ",
							"            if(responeData.data[i].id == transaction_updated.id){",
							"            console.log(\"----------------------Đã vào if *****-----------------\")",
							"            ",
							"                pm.test(\"branch of transaction updated success\", function(){",
							"                    console.log(\"brand id transaction_updated:\" + transaction_updated.branch_id);",
							"                    console.log(\"brand id list:\" + responeData.data[i].branch_id);",
							"                pm.expect(responeData.data[i].branch_id).to.eql(transaction_updated.branch_id);",
							"                });",
							"",
							"                pm.test(\"amount of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].amount).to.eql(transaction_updated.amount);",
							"                });",
							"",
							"                pm.test(\"conatact of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].contact_id).to.eql(transaction_updated.contact_id);",
							"                });",
							"",
							"                pm.test(\"description of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].description).to.eql(transaction_updated.description);",
							"                });",
							"",
							"                pm.test(\"fund of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].account_id).to.eql(transaction_updated.account_id);",
							"                });",
							"",
							"                pm.test(\"category of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].category_id).to.eql(transaction_updated.category_id);",
							"                });",
							"",
							"                pm.test(\"tax of transaction updated success\", function(){",
							"                    pm.expect(responeData.data[i].tax_id).to.eql(transaction_updated.tax_id);",
							"                    pm.expect(responeData.data[i].tax_amount).to.eql(transaction_updated.tax_amount);",
							"                });",
							"            }",
							"        }",
							"         if(page >= responeData.meta.total_pages ){",
							"            pm.environment.unset(\"page\");",
							"            postman.setNextRequest(\"get_transaction_detail\");",
							"         }",
							"",
							"         else{",
							"            page++;",
							"            pm.environment.set(\"page\", page);",
							"            postman.setNextRequest(\"get_list_transaction\");",
							"         }",
							"        break;",
							"    default:",
							"        break;",
							"}",
							"",
							"",
							"    ",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let page = pm.environment.get(\"page\");",
							"let page_size = 50;",
							"",
							"if(!page)",
							"    page = 1;",
							"",
							"pm.environment.set(\"page\", page);",
							"pm.environment.set(\"page_size\", page_size);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/get-list?page={{page}}&page_size={{page_size}}&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"transaction",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "{{page}}"
						},
						{
							"key": "page_size",
							"value": "{{page_size}}"
						},
						{
							"key": "search",
							"value": "",
							"disabled": true
						},
						{
							"key": "txn_type",
							"value": "",
							"disabled": true
						},
						{
							"key": "category_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_fund",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"let responeData = pm.response.json();",
							"let transaction_edited = pm.environment.get(\"transaction_edited\");",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"console.log(\"account_edited :\" + transaction_edited.account_id + \"-\" + transaction_edited.account_name);",
							"//chay vong lap neu id cua account khac id cua transaction muon update ta lay id do update",
							"let account_obj = [];",
							"//let account_id_updated = -1;",
							"for(let i in responeData.data[0].accounts){",
							"    ",
							"   if( transaction_edited.account_id != responeData.data[0].accounts[i].id && responeData.data[0].accounts[i].account_type != 'va_bank'){",
							"        account_obj = responeData.data[0].accounts[i];",
							"        // account_id_updated = responeData.data[0].accounts[i].id;",
							"        // console.log(\"account_updated: \" + responeData.data[0].accounts[i].id  + \"-\" + responeData.data[0].accounts[i].account_name);",
							"        transaction_updated.account_id = account_obj.id;",
							"        //account_id_updated;",
							"        transaction_updated.account_name = account_obj.account_name;",
							"        break;",
							"   }  ",
							"}",
							"// if(account_id_updated == -1){",
							"//     console.log(\"Please create more account!\");",
							"// }",
							"//push id va name cua phan update vao transaction updated",
							"pm.environment.set(\"account_obj\", account_obj);",
							"console.log(\"account obj:\", pm.environment.get(\"account_obj\"));",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"// console.log(\"----------\");",
							"// console.log(\"transaction edit :\" + transaction_edited.id);",
							"let transaction_updated_after = pm.environment.get(\"transaction_updated\");",
							"console.log(\"transaction account update :\" + transaction_updated.account_name);",
							"postman.setNextRequest(\"get_list_contact\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-list-sub?sub_account_key=A1&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"account",
						"get-list-sub"
					],
					"query": [
						{
							"key": "sub_account_key",
							"value": "A1"
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_contact",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let page = pm.environment.get(\"page\");",
							"let page_size = 20;",
							"",
							"if(!page)",
							"    page = 1;",
							"",
							"pm.environment.set(\"page\", page);",
							"pm.environment.set(\"page_size\", page_size);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"let responeData = pm.response.json();",
							"let transaction_edited = pm.environment.get(\"transaction_edited\");",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"console.log(\"contact_edited :\" + transaction_edited.contact_id);",
							"//chay vong lap neu id cua fund khac id cua transaction muon update ta lay id do update",
							"let contact_id_updated = -1;",
							"for(let i in responeData.data){",
							"    ",
							"   if( transaction_edited.contact_id != responeData.data[i].id){",
							"        contact_id_updated = responeData.data[i].id;",
							"        console.log(\"contact_updated: \" + responeData.data[i].id  + \"-\" + responeData.data[i].contact_name);",
							"        transaction_updated.contact_id = contact_id_updated;",
							"        break;",
							"   }  ",
							"}",
							"if(contact_id_updated == -1){",
							"    console.log(\"Please create more contact!\");",
							"}",
							"//push id va name cua phan update vao transaction updated",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"// console.log(\"----------\");",
							"// console.log(\"transaction edit :\" + transaction_edited.id);",
							"let transaction_updated_after = pm.environment.get(\"transaction_updated\");",
							"console.log(\"transaction contact update :\" + transaction_updated.contact_id);",
							"pm.environment.unset(\"page\");",
							" postman.setNextRequest(\"get_list_branch\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?page={{page}}&page_size={{page_size}}&sort=&search=&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-business",
						"api",
						"v1",
						"contact",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "{{page}}"
						},
						{
							"key": "page_size",
							"value": "{{page_size}}"
						},
						{
							"key": "sort",
							"value": ""
						},
						{
							"key": "search",
							"value": ""
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_branch",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let page = pm.environment.get(\"page\");",
							"let page_size = 20;",
							"",
							"if(!page)",
							"    page = 1;",
							"",
							"pm.environment.set(\"page\", page);",
							"pm.environment.set(\"page_size\", page_size);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"let responeData = pm.response.json();",
							"let transaction_edited = pm.environment.get(\"transaction_edited\");",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"console.log(\"branch_edited :\" + transaction_edited.branch_id);",
							"//chay vong lap neu id cua brand khac id cua transaction muon update ta lay id do update",
							"let branch_id_updated = -1;",
							"for(let i in responeData.data){",
							"    ",
							"   if( transaction_edited.branch_id != responeData.data[i].id){",
							"        branch_id_updated = responeData.data[i].id;",
							"        console.log(\"branch_updated: \" + responeData.data[i].id  + \"-\" + responeData.data[i].branch_name);",
							"        transaction_updated.branch_id = responeData.data[i].id;",
							"        break;",
							"   }  ",
							"}",
							"if(branch_id_updated == -1){",
							"    console.log(\"Please create more branch!\");",
							"}",
							"//push id va name cua phan update vao transaction updated",
							"",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"// console.log(\"----------\");",
							"// console.log(\"transaction edit :\" + transaction_edited.id);",
							"let transaction_updated_after = pm.environment.get(\"transaction_updated\");",
							"console.log(\"transaction branch update :\" + transaction_updated.branch_id);",
							"pm.environment.unset(\"page\");",
							" postman.setNextRequest(\"get_list_tax\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?page={{page}}&page_size={{page_size}}&search=&status=&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-business",
						"api",
						"v1",
						"branch",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "{{page}}"
						},
						{
							"key": "page_size",
							"value": "{{page_size}}"
						},
						{
							"key": "search",
							"value": ""
						},
						{
							"key": "status",
							"value": ""
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_tax",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let page = pm.environment.get(\"page\");",
							"let page_size = 20;",
							"",
							"if(!page)",
							"    page = 1;",
							"",
							"pm.environment.set(\"page\", page);",
							"pm.environment.set(\"page_size\", page_size);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"let responeData = pm.response.json();",
							"let transaction_edited = pm.environment.get(\"transaction_edited\");",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"console.log(\"tax_edited :\" + transaction_edited.tax_id);",
							"//chay vong lap neu id cua brand khac id cua transaction muon update ta lay id do update",
							"let tax_obj = [];",
							"//let tax_id_updated = -1;",
							"for(let i in responeData.data){",
							"    ",
							"   if( transaction_edited.tax_id != responeData.data[i].id){",
							"        tax_obj = responeData.data[i];",
							"        console.log(\"tax_updated: \" + responeData.data[i].id);",
							"        transaction_updated.tax_id = tax_obj.id;",
							"        break;",
							"   }  ",
							"}",
							"// if(tax_id_updated == -1){",
							"//     console.log(\"Please create more tax!\");",
							"// }",
							"//push id va name cua phan update vao transaction updated",
							"pm.environment.set(\"tax_obj\", tax_obj);",
							"console.log(\"tax obj:\", pm.environment.get(\"tax_obj\"));",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"// console.log(\"----------\");",
							"// console.log(\"transaction edit :\" + transaction_edited.id);",
							"let transaction_updated_after = pm.environment.get(\"transaction_updated\");",
							"console.log(\"transaction tax update :\" + transaction_updated.tax_id);",
							"pm.environment.unset(\"page\");",
							" postman.setNextRequest(\"get_list_type\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-business/api/v1/tax/get-list?page={{page}}&page_size={{page_size}}&business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-business",
						"api",
						"v1",
						"tax",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "{{page}}"
						},
						{
							"key": "page_size",
							"value": "{{page_size}}"
						},
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list_type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"let responeData = pm.response.json();",
							"let transaction_edited = pm.environment.get(\"transaction_edited\");",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"let list_category = [];",
							"let index;",
							"",
							"for(let i in responeData.data){",
							"    //console.log(responeData.data[i]);",
							"",
							"    //switch case",
							"    if(responeData.data[i].value != 'asset'){",
							"        for(let j in responeData.data[i].sub_group){",
							"       //console.log(responeData.data[i].sub_group[j]);",
							"        for( let k in responeData.data[i].sub_group[j].accounts){",
							"             //console.log(responeData.data[i].sub_group[j].accounts[k].id + \"-\" + responeData.data[i].sub_group[j].accounts[k].account_name);",
							"             list_category.push(responeData.data[i].sub_group[j].accounts[k].id);",
							"         }",
							"        ",
							"    }",
							"    } ",
							"}",
							"//console.log(\"list category : \" + list_category);",
							"",
							"do{",
							"    index = getRandomInt(0, list_category.length - 1 );",
							"    console.log(list_category[index]);",
							"} while(list_category[index] == transaction_edited.category_id);",
							"//console.log(list_category[index]);",
							"//push id cua phan update vao transaction updated",
							"pm.environment.set(\"type_id\", list_category[index]);",
							"transaction_updated.category_id = list_category[index];",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"// console.log(\"----------\");",
							"// console.log(\"transaction edit :\" + transaction_edited.category_id);",
							"// let transaction_updated_after = pm.environment.get(\"transaction_updated\");",
							"// console.log(\"transaction category update :\" + transaction_updated.category_id);",
							"//pm.environment.unset(\"page\");",
							" postman.setNextRequest(\"edit_transaction\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-list-setting?business_id=20",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"account",
						"get-list-setting"
					],
					"query": [
						{
							"key": "business_id",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "edit_transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responeData = pm.response.json();",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"id transaction update is\" + transaction_updated.id, function(){",
							"    pm.expect(responeData.data.id).to.eql(transaction_updated.id);",
							"});",
							"",
							"pm.test(\"branch of transaction updated success\", function(){",
							"    pm.expect(responeData.data.branch_id).to.eql(transaction_updated.branch_id);",
							"});",
							"",
							"pm.test(\"amount of transaction updated success\", function(){",
							"    pm.expect(responeData.data.amount).to.eql(transaction_updated.amount);",
							"});",
							"",
							"pm.test(\"conatact of transaction updated success\", function(){",
							"    pm.expect(responeData.data.contact_id).to.eql(transaction_updated.contact_id);",
							"});",
							"",
							"pm.test(\"description of transaction updated success\", function(){",
							"    pm.expect(responeData.data.description).to.eql(transaction_updated.description);",
							"});",
							"",
							"pm.test(\"fund of transaction updated success\", function(){",
							"    pm.expect(responeData.data.account_id).to.eql(transaction_updated.account_id);",
							"});",
							"",
							"pm.test(\"category of transaction updated success\", function(){",
							"    pm.expect(responeData.data.category_id).to.eql(transaction_updated.category_id);",
							"});",
							"",
							"pm.test(\"tax of transaction updated success\", function(){",
							"    pm.expect(responeData.data.tax_id).to.eql(transaction_updated.tax_id);",
							"    pm.expect(responeData.data.tax_amount).to.eql(transaction_updated.tax_amount);",
							"});",
							"",
							"let testcase = 4;",
							"pm.environment.set(\"testcase\", testcase);",
							"postman.setNextRequest(\"get_list_transaction\");",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function getRandomInt(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"function getRandomFloat(min, max) {",
							"    return Math.random() * (max - min) + min;",
							"}",
							"function generateRndomChars(length) {",
							"    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
							"    let result = '';",
							"    for (let i = 0; i < length; i++){",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));",
							"    }",
							"    return result;",
							"}",
							"",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"let tax_obj = pm.environment.get(\"tax_obj\");",
							"let amount = getRandomInt(1, 10) * 1000;",
							"let tax_amount = Math.round(tax_obj.rate/100 * amount);",
							"console.log(\"tax_obj.rate:\"+ tax_obj.rate + \"amoount tax:\" +tax_amount);",
							"let description = \"[APIs update] Xuyen \" + generateRndomChars(10) ;",
							"let transaction_id = transaction_updated.id;",
							"pm.environment.set(\"transaction_id\", transaction_id);",
							"transaction_updated.amount = amount;",
							"transaction_updated.tax_amount = tax_amount;",
							"transaction_updated.description = description;",
							"pm.environment.set(\"transaction_updated\", transaction_updated);",
							"let payload = pm.environment.get(\"transaction_updated\");",
							"console.log(payload);",
							"",
							"pm.environment.set(\"payload\", JSON.stringify(payload));",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/update/{{transaction_id}}",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"transaction",
						"update",
						"{{transaction_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_transaction_detail",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"let trasaction_id = transaction_updated.trasaction_id;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responeData = pm.response.json();",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"id transaction update is \" + transaction_updated.id, function(){",
							"    pm.expect(responeData.data.id).to.eql(transaction_updated.id);",
							"});",
							"",
							"pm.test(\"branch of transaction updated success\", function(){",
							"    pm.expect(responeData.data.branch_id).to.eql(transaction_updated.branch_id);",
							"});",
							"",
							"pm.test(\"amount of transaction updated success\", function(){",
							"    pm.expect(responeData.data.amount).to.eql(transaction_updated.amount);",
							"});",
							"",
							"pm.test(\"conatact of transaction updated success\", function(){",
							"    pm.expect(responeData.data.contact_id).to.eql(transaction_updated.contact_id);",
							"});",
							"",
							"pm.test(\"description of transaction updated success\", function(){",
							"    pm.expect(responeData.data.description).to.eql(transaction_updated.description);",
							"});",
							"",
							"pm.test(\"fund of transaction updated success\", function(){",
							"    pm.expect(responeData.data.account_id).to.eql(transaction_updated.account_id);",
							"});",
							"",
							"pm.test(\"category of transaction updated success\", function(){",
							"    pm.expect(responeData.data.category_id).to.eql(transaction_updated.category_id);",
							"});",
							"",
							"pm.test(\"tax of transaction updated success\", function(){",
							"    pm.expect(responeData.data.tax_id).to.eql(transaction_updated.tax_id);",
							"    pm.expect(responeData.data.tax_amount).to.eql(transaction_updated.tax_amount);",
							"});",
							"",
							"postman.setNextRequest(\"posting\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "accept-language",
						"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
					},
					{
						"key": "authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "origin",
						"value": "https://book-stg.finan.one"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://book-stg.finan.one/"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
					},
					{
						"key": "x-locale",
						"value": "vi"
					},
					{
						"key": "x-location-timezone",
						"value": "Asia/Ho_Chi_Minh"
					},
					{
						"key": "x-platform-key",
						"value": "desktop-web"
					}
				],
				"url": {
					"raw": "https://stg-api.finan.one/fo-ledger/api/v1/transaction/get-one/{{transaction_id}}",
					"protocol": "https",
					"host": [
						"stg-api",
						"finan",
						"one"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"transaction",
						"get-one",
						"{{transaction_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "posting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();",
							"let transaction_updated = pm.environment.get(\"transaction_updated\");",
							"let transaction_id = transaction_updated.id;",
							"let tax_obj = pm.environment.get(\"tax_obj\");",
							"let account_obj = pm.environment.get(\"account_obj\");",
							"let type_id = pm.environment.get(\"type_id\");",
							"let credit = 0;",
							"let debit = 0;",
							"",
							"console.log(\"type_id :\", type_id);",
							"console.log(\"tax id:\", tax_obj.account_id);",
							"",
							"",
							"//chay vong lap tim ra 2 posting cua transaction id vua edit",
							"let list_posting = pm.environment.get(\"list_posting\");",
							"if(!list_posting)",
							"    list_posting = [];",
							"",
							"for(let i in responseJson.data){",
							"    if(responseJson.data[i].object_id == transaction_id && responseJson.data[i].object_type == 'transaction'){",
							"        list_posting.push(responseJson.data[i]);",
							"    }",
							"}",
							"let is_tax = 'No tax for this transaction';",
							"pm.test(\"Quantity posting is correct : \" + list_posting.length, function(){",
							"    if(transaction_updated.tax_id != null && transaction_updated.tax_id != '00000000-0000-0000-0000-000000000000')",
							"            {",
							"                is_tax = 'Have apply tax';",
							"                pm.expect(list_posting.length).to.equal(3);",
							"            }",
							"         ",
							"    else if ((transaction_updated.tax_id == null || transaction_updated.tax_id == '00000000-0000-0000-0000-000000000000') ){",
							"            pm.expect(list_posting.length).to.equal(2);",
							"    }",
							"           ",
							"    else",
							"        return false;",
							"})",
							"let index_tax;",
							"let index_account;",
							"let index_type;",
							"",
							"console.log(list_posting);",
							"for(let i in list_posting){",
							"    ",
							"    // switch(list_posting[i].account_id){",
							"    //     case list_posting[i].account_id == tax_obj.account_id :",
							"    //         index_tax = i;",
							"    //         break;",
							"    //     case list_posting[i].account_id == type_id:",
							"    //         index_type = i;",
							"    //         break;",
							"    //     case list_posting[i].account_id = account_obj.id:",
							"    //         index_account = i;",
							"    //         break;",
							"    //     default:",
							"    //         break;",
							"    // }",
							"    if(list_posting[i].account_id == tax_obj.account_id)",
							"        index_tax = i;",
							"    if(list_posting[i].account_id == type_id)",
							"        index_type = i;",
							"    if(list_posting[i].account_id == account_obj.id)",
							"        index_account = i; ",
							"}",
							"",
							"pm.test(\"Check create debit posting for account sucess\", function(){",
							"       pm.expect(list_posting[index_account].is_credit).to.be.false;",
							"    });",
							"",
							"pm.test(\"Check amount debit posting for account correct\", function(){",
							"   pm.expect(list_posting[index_account].amount).to.eql(transaction_updated.amount);",
							"        debit += list_posting[index_account].amount;",
							"",
							"});",
							"",
							"console.log(\"tax index:\"+ index_tax + \", account index:\"+ index_account + \", type index:\"+ index_type);",
							"if( is_tax == 'Have apply tax'){",
							"    pm.test(\"Check create credit posting tax sucess\", function(){",
							"       pm.expect(list_posting[index_tax].is_credit).to.be.true;",
							"    });",
							"",
							"    pm.test(\"Check amount credit posting tax correct \", function(){",
							"        pm.expect(list_posting[index_tax].amount).to.eql(transaction_updated.tax_amount);",
							"        credit += list_posting[index_tax].amount;",
							"    });",
							"    ",
							"}",
							"",
							"pm.test(\"Check create credit posting for type sucess\", function(){",
							"       pm.expect(list_posting[index_type].is_credit).to.be.true;",
							"    });",
							"",
							"pm.test(\"Check amount credit posting for type correct\", function(){",
							"   pm.expect(list_posting[index_type].amount).to.eql(debit - credit);",
							"        credit += list_posting[index_type].amount;",
							"});",
							"",
							"pm.test(\"Check credit and debit balance\", function(){",
							"    pm.expect(debit).to.eql(credit);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{X-token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{finone_url}}/fo-ledger/api/v1/posting/get-list?page=1&page_size=50&search=&sort=",
					"host": [
						"{{finone_url}}"
					],
					"path": [
						"fo-ledger",
						"api",
						"v1",
						"posting",
						"get-list"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "page_size",
							"value": "50"
						},
						{
							"key": "search",
							"value": ""
						},
						{
							"key": "sort",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// ====================================== parser cURL",
					"function parseCURL(request_api){",
					"    let curl = \"\";",
					"    switch(request_api.method){",
					"        case \"PUT\":",
					"            curl = \"curl --location --request PUT \";",
					"            break;",
					"        case \"PATCH\":",
					"            curl = \"curl --location --request PATCH \";",
					"            break;",
					"        case \"DELETE\":",
					"            curl = \"curl --location --request DELETE \";",
					"            break;",
					"        default:",
					"            curl = \"curl --location \";",
					"            break;",
					"    }",
					"    curl += \"'\" + request_api.url.protocol + \"://\"",
					"    // host",
					"    for(let i in request_api.url.host){",
					"        if(i >= request_api.url.host.length - 1){",
					"            curl += request_api.url.host[i] + \"/\";",
					"        } else {",
					"            curl += request_api.url.host[i] + \".\";",
					"        }",
					"    }",
					"    // path",
					"    for(let i in request_api.url.path){",
					"        if(i >= request_api.url.path.length - 1){",
					"            curl += request_api.url.path[i];",
					"        } else {",
					"            curl += request_api.url.path[i] + \"/\";",
					"        }",
					"    }",
					"    // query (if have)",
					"    if(\"query\" in request_api.url){",
					"        if(request_api.url.length > 0){",
					"            curl += \"? \";",
					"            for(let i in request_api.url.query){",
					"                if(i >= request_api.url.query.length - 1){",
					"                    curl += request_api.url.query[i].key + \"=\" + request_api.url.query[i].value + \"' \";",
					"                } else {",
					"                    curl += request_api.url.query[i].key + \"=\" + request_api.url.query[i].value + \"&\";",
					"                }",
					"            }",
					"        } else {",
					"            curl += \"' \";",
					"        }",
					"    } else {",
					"        curl += \"' \";",
					"    }",
					"    // header",
					"    for(let i in request_api.header){",
					"        if(i >= request_api.header.length - 1){",
					"            curl += \"--header '\" + request_api.header[i].key + \": \" + request_api.header[i].value + \"'\";",
					"        } else {",
					"            curl += \"--header '\" + request_api.header[i].key + \": \" + request_api.header[i].value + \"' \";",
					"        }",
					"    }",
					"    switch(request_api.method){",
					"        case \"POST\":",
					"            curl += \" --data '\" + request_api.body.raw + \"'\"",
					"            break;",
					"        case \"PUT\": case \"PATCH\":",
					"            curl += \" --data-raw '\" + request_api.body.raw + \"'\"",
					"            break;",
					"        default:",
					"            break;",
					"    }",
					"    console.log(curl);",
					"    return curl;",
					"}",
					"const request_api = pm.request.toJSON();",
					"parseCURL(request_api);"
				]
			}
		}
	]
}