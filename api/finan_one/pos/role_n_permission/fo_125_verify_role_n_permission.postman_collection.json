{
	"info": {
		"_postman_id": "81785b05-b9d1-4751-86ed-80054daa82d1",
		"name": "fo_125_verify_role_n_permission",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "282640"
	},
	"item": [
		{
			"name": "authen",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// ============================= random characters",
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"",
									"// let testcase = pm.iterationData.testcase;",
									"let testcase = data.testcase;",
									"console.log(\"-------- Start Testsuite 125 --------\");",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let role = data.role;",
									"console.log(\"role: \" + role);",
									"",
									"let platform = [\"desktop-web\",\"mobile-web\",\"mobile-app\"];",
									"let configs = pm.environment.get(\"C-configs\");",
									"let payload;",
									"",
									"// let username = pm.iterationData.username;",
									"let username = data.username;",
									"// let encrypted_password = pm.iterationData.pwd;",
									"let encrypted_password = data.pwd;",
									"let login_type = data.login_type;",
									"switch(login_type){",
									"    case \"email\":",
									"        payload = {",
									"            \"app_version\": \"1.0.0\",",
									"            \"device_info\": {",
									"                \"id\": randomChars(7) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(12),",
									"                \"name\": \"IP name\",",
									"                \"os\": \"iphone\"",
									"            },",
									"            \"email\": username,",
									"            \"encrypted_password\": encrypted_password,",
									"            \"phone_number\": \"\",",
									"            \"platform_key\": platform[0]",
									"        }",
									"        break;",
									"    case \"phone\":",
									"        payload = {",
									"            \"app_version\": \"1.0.0\",",
									"            \"device_info\": {",
									"                \"id\": randomChars(7) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(12),",
									"                \"name\": \"IP name\",",
									"                \"os\": \"iphone\"",
									"            },",
									"            \"email\":\"\",",
									"            \"encrypted_password\": encrypted_password,",
									"            \"phone_number\": \"+84\" + username,",
									"            \"platform_key\": platform[0]",
									"        }",
									"        break;",
									"    case \"username\":",
									"    default:",
									"        payload = {",
									"            \"app_version\": \"1.0.0\",",
									"            \"device_info\": {",
									"                \"id\": randomChars(7) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(4) + \"-\" + randomChars(12),",
									"                \"name\": \"IP name\",",
									"                \"os\": \"iphone\"",
									"            },",
									"            \"encrypted_password\": encrypted_password,",
									"            \"username\": username,",
									"            \"platform_key\": platform[0]",
									"        }",
									"}",
									"",
									"console.log(\"payload: \",payload);",
									"pm.environment.set(\"C-payload\",JSON.stringify(payload));",
									"pm.environment.set(\"C-testcase\",testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsData = pm.response.json();",
									"",
									"if(pm.response.code == 200){",
									"    pm.test(\"System code is 102000\", function () {",
									"        pm.expect(jsData.code).to.eql(102000);",
									"    });",
									"",
									"    if(jsData.code == 102000){",
									"        let userToken = null;",
									"        try {",
									"            userToken = jsData.data.access_token;",
									"            pm.environment.set(\"C-userToken\",userToken);",
									"        } catch {",
									"            console.log(\"Can't get userToken\");",
									"        }",
									"",
									"        pm.test(\"Got userToken\", function () {",
									"            pm.expect(userToken != null).to.be.true;",
									"        });",
									"",
									"        let userInfo = jsData.data.user_info;",
									"",
									"        // show log",
									"        console.log(\"userInfo:\",JSON.stringify(userInfo));",
									"        pm.environment.set(\"C-userInfo\",userInfo);",
									"",
									"        // thÃªm owner_token",
									"        let role = data.role;",
									"        console.log(\"role: \" + role);",
									"        if(role == \"owner\"){",
									"            pm.environment.set(\"C-admin_token\",jsData.data.access_token);",
									"        }",
									"",
									"        postman.setNextRequest(\"verify_token_to_get_business\");",
									"    } else {",
									"        console.log(\"Can't get Token, end test\",jsData);",
									"        postman.setNextRequest(null);",
									"    }",
									"} else {",
									"    console.log(\"Can't login new account, end test\",jsData);",
									"    postman.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "x-locale",
								"value": "<string>",
								"description": "locale",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-user/api/v1/auth/login",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-user",
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login User"
					},
					"response": []
				},
				{
					"name": "verify_token_to_get_business",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// verify token to get business",
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsData = JSON.parse(responseBody);",
									"if(pm.response.code == 200 && jsData.code == 102000){",
									"    const jsData = pm.response.json();",
									"    pm.environment.set(\"C-user_id\",jsData.data.user_id);",
									"",
									"    let business_id = jsData.data.headers[\"x-business-id\"];",
									"    console.log(\"business_id: \" + business_id);",
									"    pm.environment.set(\"C-business_id\",business_id);",
									"",
									"    let user_id = jsData.data.user_id;",
									"    console.log(\"user_id: \" + user_id);",
									"    pm.environment.set(\"C-user_id\",user_id);",
									"",
									"    postman.setNextRequest(\"get_current_business\");",
									"} else {",
									"    console.log(\"Can't check token to get business_id, end test\");",
									"    postman.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{C-userToken}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-user/api/v1/auth/verify-token",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-user",
								"api",
								"v1",
								"auth",
								"verify-token"
							]
						},
						"description": "Login User"
					},
					"response": []
				},
				{
					"name": "get_current_business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ============================= random number between min and max",
									"function getRandomInt(min, max) {",
									"    return Math.floor(Math.random() * (max - min + 1)) + min;",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsData = pm.response.json();",
									"let current_business_id = jsData.data.current_business.id;",
									"pm.environment.set(\"X-business_id\", current_business_id);",
									"console.log(\"current_business \", current_business_id);",
									"if(pm.response.code == 200){",
									"    // console.log(\"Current business info: \", jsData.data);",
									"    let configs = pm.environment.get(\"C-configs\");",
									"    let branch_id = null, filter_branch_id = null, list_branch = [];",
									"    try {",
									"        list_branch = jsData.data.current_business.list_branch;",
									"        branch_id = list_branch[getRandomInt(0,list_branch.length - 1)].id; // getRandomInt(0,list_branch.length - 1)",
									"        if(configs.is_the_same_branch){",
									"            filter_branch_id = branch_id;",
									"        } else {",
									"            while(1){",
									"                filter_branch_id = list_branch[getRandomInt(0,list_branch.length - 1)].id;",
									"",
									"                if(branch_id != filter_branch_id) break;",
									"            }",
									"            // for(let i in list_branch){",
									"            //     if(list_branch[i].id != branch_id){",
									"            //         filter_branch_id = list_branch[i].id;",
									"            //         break;",
									"            //     }",
									"            // }",
									"        }",
									"        console.log(\"branch_id: \" + branch_id);",
									"        console.log(\"filter_branch_id: \" + filter_branch_id);",
									"        pm.environment.set(\"C-branch_id\",branch_id);",
									"        pm.environment.set(\"C-filter_branch_id\",filter_branch_id);",
									"    } catch {",
									"        console.log(\"Can't get branch id\");",
									"    }",
									"",
									"    pm.test(\"Got all branch \" + list_branch.length, function () {",
									"        pm.expect(list_branch != null).to.be.true;",
									"    });",
									"    pm.environment.set(\"C-list_branch\",list_branch);",
									"",
									"    pm.test(\"Got branch id \" + branch_id, function () {",
									"        pm.expect(branch_id != null).to.be.true;",
									"    });",
									"",
									"    // debug",
									"    for(let i in list_branch){",
									"        if(list_branch[i].id == branch_id){",
									"            console.log(\"Will create Invoice at branch \" + list_branch[i].branch_name);",
									"            break;",
									"        }",
									"    }",
									"    for(let i in list_branch){",
									"        if (list_branch[i].id == filter_branch_id){",
									"            console.log(\"Will check Invoice, Batch, Inventory at branch \" + list_branch[i].branch_name);",
									"            break;",
									"        }",
									"    }",
									"",
									"    let payment_method_list = [];",
									"    for(let i in jsData.data.list_payment_method){",
									"        if(jsData.data.list_payment_method[i].is_active){",
									"            payment_method_list[payment_method_list.length] = jsData.data.list_payment_method[i];",
									"        }",
									"    }",
									"",
									"    pm.test(\"Got payment_method_list \" + payment_method_list.length, function () {",
									"        pm.expect(payment_method_list.length > 0).to.be.true;",
									"    });",
									"    pm.environment.set(\"C-payment_method_list\",payment_method_list);",
									"    ",
									"    let testcase = pm.environment.get(\"C-testcase\");",
									"    testcase++;",
									"    pm.environment.set(\"C-testcase\",testcase);",
									"    //postman.setNextRequest(\"get_einvoice_invoice\"); // get_quote_product, create_product, get_invoice_product, get_bill_product, get_recurrinng_invoice_product, get_einvoice_invoice",
									"} else {",
									"    console.log(\"Can't get business detail, end test\", jsData);",
									"    postman.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/business/get-current",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"business",
								"get-current"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "product",
			"item": [
				{
					"name": "create_product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_create = data.item_create;",
									"console.log(\"product_create: \" + product_create);",
									"",
									"const jsData = pm.response.json();",
									"if(product_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let product_id = jsData.data.id;",
									"        pm.environment.set(\"C-product_id\",product_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let sku_code = \"PRD\" + list_func.randomChars(6);",
									"let sku_name = \"[API] Book product \" + sku_code;",
									"let sku_price = list_func.getRandomInt(10,200)*1000;",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let payload = {",
									"    \"uom\": \"\",",
									"    \"product_name\": sku_name,",
									"    \"product_type\": \"physical\",",
									"    // \"income_account_id\": 1004139,",
									"    // \"expense_account_id\": 1004144,",
									"    \"income_taxes\": [],",
									"    \"expense_taxes\": [],",
									"    \"images\": [],",
									"    \"is_income_recorded\": true,",
									"    \"is_expense_recorded\": true,",
									"    \"short_desc\": \"\",",
									"    \"track_inventory\": false,",
									"    \"list_sku\": [",
									"        {",
									"            \"bar_code\": \"\",",
									"            \"can_pick_quantity\": null,",
									"            \"cost_price\": null,",
									"            \"selling_price\": sku_price,",
									"            \"is_hidden\": false,",
									"            \"product_id\": null,",
									"            \"sale_price\": sku_price,",
									"            \"sku_code\": sku_code,",
									"            \"sku_name\": sku_name,",
									"            \"attributes\": [],",
									"            \"uom\": \"\",",
									"            \"uoms\": [],",
									"            \"is_origin_uom\": true,",
									"            \"allow_negative_inventory\": false,",
									"            \"is_in_business\": true,",
									"            \"images\": [],",
									"            \"weight_unit\": \"kg\",",
									"            \"list_branches\": [],",
									"            \"track_inventory\": false",
									"        }",
									"    ],",
									"    \"list_uom\": [],",
									"    \"list_variant\": [],",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-business/api/v1/product/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"uom\":\"\",\"product_name\":\"Test manual\",\"product_type\":\"physical\",\"income_account_id\":1004139,\"expense_account_id\":1004144,\"income_taxes\":[],\"expense_taxes\":[],\"images\":[],\"is_income_recorded\":true,\"is_expense_recorded\":true,\"short_desc\":\"\",\"track_inventory\":false,\"list_sku\":[{\"bar_code\":\"\",\"can_pick_quantity\":null,\"cost_price\":null,\"selling_price\":null,\"is_hidden\":false,\"product_id\":null,\"sale_price\":null,\"sku_code\":\"SP00007\",\"sku_name\":\"Test manual\",\"attributes\":[],\"uom\":\"\",\"uoms\":[],\"is_origin_uom\":true,\"allow_negative_inventory\":false,\"is_in_business\":true,\"images\":[],\"weight_unit\":\"kg\",\"list_branches\":[],\"track_inventory\":false}],\"list_uom\":[],\"list_variant\":[],\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_product_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_create = data.item_create;",
									"console.log(\"product_create: \" + product_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let product_id = jsData.data.id;",
									"pm.environment.set(\"C-product_id\",product_id);",
									"   "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let sku_code = \"PRD\" + list_func.randomChars(6);",
									"let sku_name = \"[API] Book product \" + sku_code;",
									"let sku_price = list_func.getRandomInt(10,200)*1000;",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let payload = {",
									"    \"uom\": \"\",",
									"    \"product_name\": sku_name,",
									"    \"product_type\": \"physical\",",
									"    // \"income_account_id\": 1004139,",
									"    // \"expense_account_id\": 1004144,",
									"    \"income_taxes\": [],",
									"    \"expense_taxes\": [],",
									"    \"images\": [],",
									"    \"is_income_recorded\": true,",
									"    \"is_expense_recorded\": true,",
									"    \"short_desc\": \"\",",
									"    \"track_inventory\": false,",
									"    \"list_sku\": [",
									"        {",
									"            \"bar_code\": \"\",",
									"            \"can_pick_quantity\": null,",
									"            \"cost_price\": null,",
									"            \"selling_price\": sku_price,",
									"            \"is_hidden\": false,",
									"            \"product_id\": null,",
									"            \"sale_price\": sku_price,",
									"            \"sku_code\": sku_code,",
									"            \"sku_name\": sku_name,",
									"            \"attributes\": [],",
									"            \"uom\": \"\",",
									"            \"uoms\": [],",
									"            \"is_origin_uom\": true,",
									"            \"allow_negative_inventory\": false,",
									"            \"is_in_business\": true,",
									"            \"images\": [],",
									"            \"weight_unit\": \"kg\",",
									"            \"list_branches\": [],",
									"            \"track_inventory\": false",
									"        }",
									"    ],",
									"    \"list_uom\": [],",
									"    \"list_variant\": [],",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-business/api/v1/product/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"uom\":\"\",\"product_name\":\"Test manual\",\"product_type\":\"physical\",\"income_account_id\":1004139,\"expense_account_id\":1004144,\"income_taxes\":[],\"expense_taxes\":[],\"images\":[],\"is_income_recorded\":true,\"is_expense_recorded\":true,\"short_desc\":\"\",\"track_inventory\":false,\"list_sku\":[{\"bar_code\":\"\",\"can_pick_quantity\":null,\"cost_price\":null,\"selling_price\":null,\"is_hidden\":false,\"product_id\":null,\"sale_price\":null,\"sku_code\":\"SP00007\",\"sku_name\":\"Test manual\",\"attributes\":[],\"uom\":\"\",\"uoms\":[],\"is_origin_uom\":true,\"allow_negative_inventory\":false,\"is_in_business\":true,\"images\":[],\"weight_unit\":\"kg\",\"list_branches\":[],\"track_inventory\":false}],\"list_uom\":[],\"list_variant\":[],\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_list_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_view = data.item_view;",
									"console.log(\"product_view: \" + product_view);",
									"",
									"const jsData = pm.response.json();",
									"if(product_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let product_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-product_id\",product_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(\"get_quote_detail\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-list?business_id={{C-business_id}}&page=1&page_size=50&search=&sort=",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "sort",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_product_detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_view = data.item_view;",
									"console.log(\"product_view: \" + product_view);",
									"",
									"const jsData = pm.response.json();",
									"if(product_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-one/{{C-product_id}}?business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-one",
								"{{C-product_id}}"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let sku_code = \"PRD\" + list_func.randomChars(6);",
									"let sku_name = \"[API][Edit] Book product \" + sku_code;",
									"let sku_price = list_func.getRandomInt(10,200)*1000;",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let payload = {",
									"    \"is_income_recorded\": true,",
									"    // \"income_account_id\": 1004139,",
									"    \"product_name\": sku_name,",
									"    \"product_type\": \"physical\",",
									"    \"uom\": \"\",",
									"    \"expense_account_id\": 0,",
									"    \"income_taxes\": [],",
									"    \"expense_taxes\": [],",
									"    \"images\": [],",
									"    \"is_expense_recorded\": true,",
									"    \"short_desc\": \"\",",
									"    \"track_inventory\": false,",
									"    \"list_uom\": [],",
									"    \"list_variant\": [],",
									"    \"list_sku\": [",
									"        {",
									"            \"sku_code\": sku_code,",
									"            \"sku_name\": sku_name,",
									"            \"is_hidden\": false,",
									"            \"cost_price\": null,",
									"            \"sale_price\": sku_price,",
									"            \"product_id\": pm.environment.get(\"C-product_id\"),",
									"            \"track_inventory\": false,",
									"            \"bar_code\": \"\",",
									"            \"can_pick_quantity\": null,",
									"            \"attributes\": [],",
									"            \"is_origin_uom\": true,",
									"            \"uom\": \"\",",
									"            \"uoms\": [],",
									"            \"is_in_business\": true,",
									"            \"selling_price\": null,",
									"            \"images\": [],",
									"            \"list_branches\": [],",
									"            \"allow_negative_inventory\": false",
									"        }",
									"    ],",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_update = data.quote_update;",
									"console.log(\"quote_update: \" + quote_update);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/update/{{C-product_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"update",
								"{{C-product_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-business/api/v1/product/update/0768ff56-a8f5-4ec0-a7ed-3347f5c3f413' \\\n  -X 'PUT' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"is_income_recorded\":true,\"income_account_id\":1004139,\"product_name\":\"[API] Book product PRDixyfLS\",\"product_type\":\"physical\",\"uom\":\"\",\"expense_account_id\":0,\"income_taxes\":[],\"expense_taxes\":[],\"images\":[],\"is_expense_recorded\":true,\"short_desc\":\"\",\"track_inventory\":false,\"list_uom\":[],\"list_variant\":[],\"list_sku\":[{\"sku_code\":\"PRDixyfLS\",\"sku_name\":\"[API] Book product PRDixyfLS\",\"is_hidden\":false,\"cost_price\":null,\"sale_price\":20000,\"product_id\":\"0768ff56-a8f5-4ec0-a7ed-3347f5c3f413\",\"track_inventory\":false,\"bar_code\":\"\",\"can_pick_quantity\":null,\"attributes\":[],\"is_origin_uom\":true,\"uom\":\"\",\"uoms\":[],\"is_in_business\":true,\"selling_price\":null,\"images\":[],\"list_branches\":[],\"allow_negative_inventory\":false}],\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "delete_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_delete = data.item_delete;",
									"console.log(\"product_delete: \" + product_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(product_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/delete/{{C-product_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"delete",
								"{{C-product_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-business/api/v1/product/delete/9befa685-0f2f-44c3-927f-4e07739abce2' \\\n  -X 'DELETE' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "import_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let sku_code = \"PRD\" + list_func.randomChars(6);",
									"let sku_name = \"[API][Import] Book product \" + sku_code;",
									"let sku_price = list_func.getRandomInt(10,200)*1000;",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let payload = {",
									"    \"data\": [",
									"        {",
									"            \"product_name\": sku_name,",
									"            \"product_type\": \"physical\",",
									"            \"uom\": \"\",",
									"            \"income_account_id\": \"\",",
									"            \"expense_account_id\": \"\",",
									"            \"income_taxes\": [],",
									"            \"expense_taxes\": [],",
									"            \"images\": [],",
									"            \"short_desc\": \"\",",
									"            \"track_inventory\": false,",
									"            \"business_id\": 134,",
									"            \"list_sku\": [",
									"                {",
									"                    \"cost_price\": null,",
									"                    \"is_hidden\": false,",
									"                    \"product_id\": null,",
									"                    \"sale_price\": sku_price,",
									"                    \"sku_code\": sku_code,",
									"                    \"sku_name\": sku_name",
									"                }",
									"            ]",
									"        }",
									"    ]",
									"    // \"mass_upload_id\": \"0e9dfdd3-1be6-407f-ba42-77fa5747131c\"",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let product_create = data.item_create;",
									"console.log(\"product_create: \" + product_create);",
									"",
									"const jsData = pm.response.json();",
									"if(product_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"pm.environment.unset(\"C-product_id\");",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/mass-upload",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"mass-upload"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-business/api/v1/product/mass-upload' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"data\":[{\"product_name\":\"Test import\",\"product_type\":\"physical\",\"uom\":\"\",\"income_account_id\":\"\",\"expense_account_id\":\"\",\"income_taxes\":[],\"expense_taxes\":[],\"images\":[],\"short_desc\":\"\",\"track_inventory\":false,\"business_id\":134,\"list_sku\":[{\"cost_price\":null,\"is_hidden\":false,\"product_id\":null,\"sale_price\":200000,\"sku_code\":\"PRDIMP01\",\"sku_name\":\"Test import\"}]}],\"mass_upload_id\":\"0e9dfdd3-1be6-407f-ba42-77fa5747131c\"}' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "invoice",
			"item": [
				{
					"name": "get_invoice_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let product_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got product_obj: \", product_obj);",
									"pm.environment.set(\"C-product_obj\",product_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-list?business_id={{C-business_id}}&page=1&page_size=50&search=&sort=",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "sort",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_invoice_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let contact_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got contact_obj: \", contact_obj);",
									"pm.environment.set(\"C-contact_obj\",contact_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "option",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "complete",
									"description": "waiting_confirm,delivering,complete",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "false",
									"description": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"INV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_obj\");",
									"let product_obj = pm.environment.get(\"C-product_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_obj.id,",
									"            \"product_name\": product_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_create = data.invoice_create;",
									"console.log(\"invoice_create: \" + invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let invoice_id = jsData.data.id;",
									"        pm.environment.set(\"C-invoice_id\",invoice_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"account_id\":1004140,\"item_amount\":36000,\"before_tax_amount\":36000,\"after_tax_amount\":37577,\"discount_amount\":0,\"item_tax_amount\":1577,\"total_item_amount\":36000,\"total_line_item_amount\":36000,\"quantity\":1,\"taxes\":[{\"id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"rate\":4.38,\"amount\":1577}],\"sku_info\":{\"id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"product_type\":\"physical\",\"sku_name\":\"[API] Product rOQESjPV\",\"sku_code\":\"rOQESjPV\",\"sale_price\":36000,\"min_sale_price\":36000,\"max_sale_price\":36000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":true,\"is_in_business\":false,\"product_link_account\":{\"id\":\"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"is_income_recorded\":true,\"income_account_id\":1004140,\"is_expense_recorded\":true,\"expense_account_id\":1004152},\"income_taxes\":[{\"id\":\"e3d10948-1be7-49af-97e2-2f2aa8acc706\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"income\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"expense_taxes\":[{\"id\":\"8fc1a598-b98f-4ff5-b348-53216aa1a689\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"expense\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"contact_id\":\"1ed411cb-af74-4435-aef4-998c0e58fb60\",\"value_at\":\"2024-10-08T17:00:00.000Z\",\"discounts\":[{\"is_rate\":true,\"value\":0}],\"cart_status\":\"draft\",\"due_at\":\"2024-10-09T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":36000,\"discount_amount\":0,\"tax_amount\":1577,\"total_amount\":37577,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_invoice_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"INV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_obj\");",
									"let product_obj = pm.environment.get(\"C-product_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_obj.id,",
									"            \"product_name\": product_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_create = data.invoice_create;",
									"console.log(\"invoice_create: \" + invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let invoice_id = jsData.data.id;",
									"pm.environment.set(\"C-invoice_id\",invoice_id);",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "stg-api.finan.one"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"account_id\":1004140,\"item_amount\":36000,\"before_tax_amount\":36000,\"after_tax_amount\":37577,\"discount_amount\":0,\"item_tax_amount\":1577,\"total_item_amount\":36000,\"total_line_item_amount\":36000,\"quantity\":1,\"taxes\":[{\"id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"rate\":4.38,\"amount\":1577}],\"sku_info\":{\"id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"product_type\":\"physical\",\"sku_name\":\"[API] Product rOQESjPV\",\"sku_code\":\"rOQESjPV\",\"sale_price\":36000,\"min_sale_price\":36000,\"max_sale_price\":36000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":true,\"is_in_business\":false,\"product_link_account\":{\"id\":\"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"is_income_recorded\":true,\"income_account_id\":1004140,\"is_expense_recorded\":true,\"expense_account_id\":1004152},\"income_taxes\":[{\"id\":\"e3d10948-1be7-49af-97e2-2f2aa8acc706\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"income\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"expense_taxes\":[{\"id\":\"8fc1a598-b98f-4ff5-b348-53216aa1a689\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"expense\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"contact_id\":\"1ed411cb-af74-4435-aef4-998c0e58fb60\",\"value_at\":\"2024-10-08T17:00:00.000Z\",\"discounts\":[{\"is_rate\":true,\"value\":0}],\"cart_status\":\"draft\",\"due_at\":\"2024-10-09T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":36000,\"discount_amount\":0,\"tax_amount\":1577,\"total_amount\":37577,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "update_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"INV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API][Edit] Book invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_obj\");",
									"let product_obj = pm.environment.get(\"C-product_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_obj.id,",
									"            \"product_name\": product_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_update = data.invoice_update;",
									"console.log(\"invoice_update: \" + invoice_update);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authority",
								"value": "stg-api.finan.one"
							},
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/update/{{C-invoice_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"update",
								"{{C-invoice_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/update/fe9f9933-7b7d-4e18-ab18-773eb2efb945' \\\n  -X 'PUT' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"00000000-0000-0000-0000-000000000000\",\"product_id\":\"7b40cdf1-83c2-4f7f-96b7-978c0aa5418f\",\"product_name\":\"[API] Product qt9nPikn\",\"account_id\":0,\"item_amount\":20000,\"before_tax_amount\":20000,\"after_tax_amount\":20000,\"discount_amount\":0,\"item_tax_amount\":20000,\"total_item_amount\":20000,\"total_line_item_amount\":20000,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"uom\":\"\",\"sku_name\":\"[API] Product qt9nPikn\",\"inventory\":{\"batches\":null,\"cost_price\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"total_quantity\":0,\"total_can_pick_quantity\":0,\"total_delivery_quantity\":0},\"is_hidden\":true,\"cost_price\":0,\"order_code\":\"INVGstYSW\",\"product_id\":\"7b40cdf1-83c2-4f7f-96b7-978c0aa5418f\",\"sale_price\":20000,\"shelf_life\":0,\"track_batch\":false,\"income_taxes\":null,\"product_name\":\"[API] Product qt9nPikn\",\"product_type\":\"physical\",\"expense_taxes\":null,\"selling_price\":0,\"sold_quantity\":0,\"is_in_business\":false,\"max_cost_price\":0,\"min_cost_price\":0,\"shelf_life_unit\":\"\",\"track_inventory\":false,\"warning_quantity\":0,\"allow_negative_inventory\":false},\"note\":\"\"}],\"contact_id\":\"1ed411cb-af74-4435-aef4-998c0e58fb60\",\"value_at\":\"2024-10-08T17:00:00.000Z\",\"discounts\":[{\"is_rate\":true,\"value\":0}],\"cart_status\":\"draft\",\"due_at\":\"2024-10-09T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"INVGstYSW\",\"note\":\"\",\"email\":\"\",\"items_amount\":20000,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":20000,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"692c7a1b-2e6a-4897-8f02-c5214e677b77\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_invoice_detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_view = data.invoice_view;",
									"console.log(\"invoice_view: \" + invoice_view);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/get-one/{{C-invoice_id}}?business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"get-one",
								"{{C-invoice_id}}"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_invoice ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_delete = data.invoice_delete;",
									"console.log(\"invoice_delete: \" + invoice_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/delete/{{C-invoice_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"delete",
								"{{C-invoice_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/delete/d06d7875-6ae0-4794-9b57-91a93ba26863' \\\n  -X 'DELETE' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "import_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"INV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_obj\");",
									"let product_obj = pm.environment.get(\"C-product_obj\");",
									"",
									"let payload = {",
									"    \"data\": [",
									"        {",
									"            \"invoice_number\": order_code,",
									"            \"customer_name\": \"Test Import Customer\",",
									"            \"customer_email\": \"\",",
									"            \"created_date\": value_at,",
									"            \"due_date\": value_at,",
									"            \"tax_type\": \"price_including_tax\",",
									"            \"invoice_note\": invoice_note,",
									"            \"items\": [",
									"                {",
									"                    \"item_name\": product_obj.product_name,",
									"                    \"item_price\": product_obj.list_sku[0].sale_price,",
									"                    \"quantity\": 1,",
									"                    \"total_amount\": product_obj.list_sku[0].sale_price,",
									"                    \"taxes\": []",
									"                }",
									"            ],",
									"            \"branch_id\": pm.environment.get(\"C-branch_id\")",
									"        }",
									"    ]",
									"    // \"mass_upload_id\": \"1a3c69d8-a90f-45ad-9af1-09970f74be5c\"",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_create = data.invoice_create;",
									"console.log(\"invoice_create: \" + invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/mass-upload",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"mass-upload"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/mass-upload' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"data\":[{\"invoice_number\":\"INVIMP01\",\"customer_name\":\"Test Import Customer\",\"customer_email\":\"\",\"created_date\":\"2024-10-09T00:00:00.000Z\",\"due_date\":\"2024-10-09T00:00:00.000Z\",\"tax_type\":\"price_including_tax\",\"invoice_note\":\"Note import\",\"items\":[{\"item_name\":\"Test Import Product\",\"item_price\":30000,\"quantity\":1,\"total_amount\":30000,\"taxes\":[]}],\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\"}],\"mass_upload_id\":\"1a3c69d8-a90f-45ad-9af1-09970f74be5c\"}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_list_invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_view = data.invoice_view;",
									"console.log(\"invoice_view: \" + invoice_view);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let invoice_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-invoice_id\",invoice_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(\"get_quote_detail\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "export_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_export = data.invoice_export;",
									"console.log(\"invoice_export: \" + invoice_export);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_export == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/export?file_template=standard&file_format=xlsx&status=draft",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"export"
							],
							"query": [
								{
									"key": "file_template",
									"value": "standard"
								},
								{
									"key": "file_format",
									"value": "xlsx"
								},
								{
									"key": "status",
									"value": "draft"
								},
								{
									"key": "start_time_created_at",
									"value": "",
									"disabled": true
								},
								{
									"key": "end_time_created_at",
									"value": "",
									"disabled": true
								},
								{
									"key": "start_time_due_at",
									"value": "",
									"disabled": true
								},
								{
									"key": "end_time_due_at",
									"value": "",
									"disabled": true
								},
								{
									"key": "contact_ids",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/export?file_template=standard&file_format=xlsx&status=draft%2Cunsent%2Csent%2Cpartial_paid%2Coverdue%2Cfully_paid&start_time_created_at=&end_time_created_at=&start_time_due_at=&end_time_due_at=&contact_ids=' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_invoice_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"INV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_obj\");",
									"let product_obj = pm.environment.get(\"C-product_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_obj.id,",
									"            \"product_name\": product_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_create = data.invoice_create;",
									"console.log(\"invoice_create: \" + invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let invoice_id = jsData.data.id;",
									"pm.environment.set(\"C-invoice_id\",invoice_id);",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"account_id\":1004140,\"item_amount\":36000,\"before_tax_amount\":36000,\"after_tax_amount\":37577,\"discount_amount\":0,\"item_tax_amount\":1577,\"total_item_amount\":36000,\"total_line_item_amount\":36000,\"quantity\":1,\"taxes\":[{\"id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"rate\":4.38,\"amount\":1577}],\"sku_info\":{\"id\":\"a55da0c7-32b0-4206-a8e4-5a43557aa4a3\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"product_name\":\"[API] Product rOQESjPV\",\"product_type\":\"physical\",\"sku_name\":\"[API] Product rOQESjPV\",\"sku_code\":\"rOQESjPV\",\"sale_price\":36000,\"min_sale_price\":36000,\"max_sale_price\":36000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":true,\"is_in_business\":false,\"product_link_account\":{\"id\":\"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"is_income_recorded\":true,\"income_account_id\":1004140,\"is_expense_recorded\":true,\"expense_account_id\":1004152},\"income_taxes\":[{\"id\":\"e3d10948-1be7-49af-97e2-2f2aa8acc706\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"income\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"expense_taxes\":[{\"id\":\"8fc1a598-b98f-4ff5-b348-53216aa1a689\",\"product_id\":\"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",\"account_type\":\"expense\",\"tax_id\":\"bdc55bc5-6b2d-433a-a7b0-3f52fcf55525\",\"tax_name\":\"[API] tax 4.38 - WKtVMZEQ\",\"tax_rate\":4.38}],\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"contact_id\":\"1ed411cb-af74-4435-aef4-998c0e58fb60\",\"value_at\":\"2024-10-08T17:00:00.000Z\",\"discounts\":[{\"is_rate\":true,\"value\":0}],\"cart_status\":\"draft\",\"due_at\":\"2024-10-09T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":36000,\"discount_amount\":0,\"tax_amount\":1577,\"total_amount\":37577,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "mass_delete_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let payload = {",
									"    \"action\": \"delete\",",
									"    \"ids\": [",
									"        pm.environment.get(\"C-invoice_id\")",
									"    ],",
									"    \"description\": \"\",",
									"    \"emails\": []",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let invoice_delete = data.invoice_delete;",
									"console.log(\"invoice_delete: \" + invoice_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(invoice_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-invoice_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/mass-actions",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"mass-actions"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/mass-actions' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"action\":\"delete\",\"ids\":[\"fe9f9933-7b7d-4e18-ab18-773eb2efb945\"],\"description\":\"\",\"emails\":[]}' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "bill",
			"item": [
				{
					"name": "get_bill_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let product_bill_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got product_bill_obj: \", product_bill_obj);",
									"pm.environment.set(\"C-product_bill_obj\",product_bill_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-list?business_id={{C-business_id}}&page=1&page_size=50&search=&sort=",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "sort",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_bill_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let contact_bill_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got contact_bill_obj: \", contact_bill_obj);",
									"pm.environment.set(\"C-contact_bill_obj\",contact_bill_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "option",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "complete",
									"description": "waiting_confirm,delivering,complete",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "false",
									"description": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_bill",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"BIL\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book bill \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_bill_obj = pm.environment.get(\"C-contact_bill_obj\");",
									"let product_bill_obj = pm.environment.get(\"C-product_bill_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_bill_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_bill_obj.id,",
									"            \"product_name\": product_bill_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_bill_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_bill_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_bill_obj.id,",
									"                \"product_name\": product_bill_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_bill_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_bill_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_bill_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_bill_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_create = data.bill_create;",
									"console.log(\"bill_create: \" + bill_create);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let bill_id = jsData.data.id;",
									"        pm.environment.set(\"C-bill_id\",bill_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/bill/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"96a4efef-721e-442b-8a7d-41bd96af4675\",\"product_id\":\"f603bf13-c12f-4291-8a93-c07cc3521886\",\"product_name\":\"Test Import Product\",\"account_id\":0,\"item_amount\":0,\"before_tax_amount\":0,\"after_tax_amount\":0,\"discount_amount\":0,\"item_tax_amount\":0,\"total_item_amount\":0,\"total_line_item_amount\":0,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"96a4efef-721e-442b-8a7d-41bd96af4675\",\"product_id\":\"f603bf13-c12f-4291-8a93-c07cc3521886\",\"product_name\":\"Test Import Product\",\"product_type\":\"physical\",\"sku_name\":\"Test Import Product\",\"sku_code\":\"SP00008\",\"sale_price\":30000,\"min_sale_price\":30000,\"max_sale_price\":30000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":1,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":false,\"is_in_business\":false,\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"value_at\":\"2024-10-09T17:00:00.000Z\",\"discounts\":[],\"cart_status\":\"draft\",\"due_at\":\"2024-10-10T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":0,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":0,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_bill_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"BIL\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book bill \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_bill_obj = pm.environment.get(\"C-contact_bill_obj\");",
									"let product_bill_obj = pm.environment.get(\"C-product_bill_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_bill_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_bill_obj.id,",
									"            \"product_name\": product_bill_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_bill_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_bill_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_bill_obj.id,",
									"                \"product_name\": product_bill_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_bill_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_bill_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_bill_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_bill_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_create = data.bill_create;",
									"console.log(\"bill_create: \" + bill_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let bill_id = jsData.data.id;",
									"pm.environment.set(\"C-bill_id\",bill_id);",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/bill/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"96a4efef-721e-442b-8a7d-41bd96af4675\",\"product_id\":\"f603bf13-c12f-4291-8a93-c07cc3521886\",\"product_name\":\"Test Import Product\",\"account_id\":0,\"item_amount\":0,\"before_tax_amount\":0,\"after_tax_amount\":0,\"discount_amount\":0,\"item_tax_amount\":0,\"total_item_amount\":0,\"total_line_item_amount\":0,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"96a4efef-721e-442b-8a7d-41bd96af4675\",\"product_id\":\"f603bf13-c12f-4291-8a93-c07cc3521886\",\"product_name\":\"Test Import Product\",\"product_type\":\"physical\",\"sku_name\":\"Test Import Product\",\"sku_code\":\"SP00008\",\"sale_price\":30000,\"min_sale_price\":30000,\"max_sale_price\":30000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":1,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":false,\"is_in_business\":false,\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"value_at\":\"2024-10-09T17:00:00.000Z\",\"discounts\":[],\"cart_status\":\"draft\",\"due_at\":\"2024-10-10T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":0,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":0,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":null,\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "update_bill",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"BIL\" + list_func.randomChars(6);",
									"let invoice_note = \"[API][Edit] Book bill \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_bill_obj = pm.environment.get(\"C-contact_bill_obj\");",
									"let product_bill_obj = pm.environment.get(\"C-product_bill_obj\");",
									"",
									"let payload = {",
									"    \"items\": [",
									"        {",
									"            \"sku_id\": product_bill_obj.list_sku[0].sku_id,",
									"            \"product_id\": product_bill_obj.id,",
									"            \"product_name\": product_bill_obj.product_name,",
									"            // \"account_id\": 1004140,",
									"            \"item_amount\": product_bill_obj.list_sku[0].sale_price,",
									"            // \"before_tax_amount\": 36000,",
									"            // \"after_tax_amount\": 37577,",
									"            \"discount_amount\": 0,",
									"            // \"item_tax_amount\": 1577,",
									"            // \"total_item_amount\": 36000,",
									"            // \"total_line_item_amount\": 36000,",
									"            \"quantity\": 1,",
									"            \"taxes\": [],",
									"            \"sku_info\": {",
									"                \"id\": product_bill_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_bill_obj.id,",
									"                \"product_name\": product_bill_obj.product_name,",
									"                \"product_type\": \"physical\",",
									"                \"sku_name\": product_bill_obj.list_sku[0].sku_name,",
									"                \"order_code\": order_code,",
									"                \"sale_price\": product_bill_obj.list_sku[0].sale_price,",
									"                // \"min_sale_price\": 36000,",
									"                // \"max_sale_price\": 36000,",
									"                \"cost_price\": 0,",
									"                \"min_cost_price\": 0,",
									"                \"max_cost_price\": 0,",
									"                \"selling_price\": 0,",
									"                \"sold_quantity\": 0,",
									"                \"uom\": \"\",",
									"                \"warning_quantity\": 0,",
									"                \"allow_negative_inventory\": false,",
									"                \"track_inventory\": false,",
									"                \"track_batch\": false,",
									"                \"shelf_life\": 0,",
									"                \"shelf_life_unit\": \"\",",
									"                \"is_hidden\": true,",
									"                \"is_in_business\": false,",
									"                // \"product_link_account\": {",
									"                //     \"id\": \"39edbc94-4818-48cb-bb6b-f3d6da0c5b26\",",
									"                //     \"product_id\": \"1b8f88b3-4e06-4c55-901b-bcb1d2f561bf\",",
									"                //     \"is_income_recorded\": true,",
									"                //     \"income_account_id\": 1004140,",
									"                //     \"is_expense_recorded\": true,",
									"                //     \"expense_account_id\": 1004152",
									"                // },",
									"                \"income_taxes\":null,",
									"                \"expense_taxes\": null,",
									"                \"inventory\": {",
									"                    \"cost_price\": 0,",
									"                    \"total_quantity\": 0,",
									"                    \"total_delivery_quantity\": 0,",
									"                    \"total_can_pick_quantity\": 0,",
									"                    \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                    \"batches\": null",
									"                }",
									"            },",
									"            \"note\": invoice_note",
									"        }",
									"    ],",
									"    \"contact_id\": contact_bill_obj.id,",
									"    \"value_at\": value_at,",
									"    \"discounts\": [],",
									"    \"cart_status\": \"draft\",",
									"    \"due_at\": value_at,",
									"    \"tax_type\": \"price_excluding_tax\",",
									"    \"order_code\": order_code,",
									"    \"note\": \"\",",
									"    \"email\": \"\",",
									"    \"items_amount\": product_bill_obj.list_sku[0].sale_price,",
									"    \"discount_amount\": 0,",
									"    \"tax_amount\": 0,",
									"    // \"total_amount\": 37577,",
									"    \"payment_config\": [],",
									"    \"payment_account_id\": null,",
									"    \"reference_code\": \"\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"payment_info\": null,",
									"    \"currency\": \"vnd\",",
									"    \"attachment_url\": [],",
									"    \"is_pre_tax\": false,",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_update = data.bill_update;",
									"console.log(\"bill_update: \" + bill_update);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/update/{{C-bill_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"update",
								"{{C-bill_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/bill/update/e883bcba-e6b7-4610-b055-9f8a5ef3f105' \\\n  -X 'PUT' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"items\":[{\"sku_id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"account_id\":0,\"item_amount\":0,\"before_tax_amount\":0,\"after_tax_amount\":0,\"discount_amount\":0,\"item_tax_amount\":0,\"total_item_amount\":0,\"total_line_item_amount\":0,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"uom\":\"\",\"taxes\":null,\"images\":null,\"bar_code\":\"\",\"priority\":0,\"sku_code\":\"PRDpPqFsf\",\"sku_name\":\"[API] Book product PRDpPqFsf\",\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_can_pick_quantity\":0,\"total_delivery_quantity\":0},\"is_hidden\":false,\"cost_price\":0,\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"sale_price\":121000,\"shelf_life\":0,\"product_name\":\"[API] Book product PRDpPqFsf\",\"product_type\":\"physical\",\"selling_price\":0,\"sold_quantity\":0,\"is_in_business\":false,\"product_images\":null,\"is_product_fast\":false,\"shelf_life_unit\":\"\",\"track_inventory\":false,\"is_saved_product\":false,\"allow_negative_inventory\":false},\"note\":\"\"}],\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"value_at\":\"2024-10-09T17:00:00.000Z\",\"discounts\":[],\"cart_status\":\"draft\",\"due_at\":\"2024-10-10T16:59:59.999Z\",\"tax_type\":\"price_excluding_tax\",\"order_code\":\"HD49\",\"note\":\"\",\"email\":\"\",\"items_amount\":0,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":0,\"payment_config\":[],\"payment_account_id\":null,\"reference_code\":\"\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"payment_info\":{\"account_number\":\"\",\"account_name\":\"\",\"note\":\"[API][Business] CL 3feHnDkWUn TT HÄ HD49\"},\"currency\":\"vnd\",\"attachment_url\":[],\"is_pre_tax\":false,\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "delete_bill",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_delete = data.bill_delete;",
									"console.log(\"bill_delete: \" + bill_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/delete/{{C-bill_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"delete",
								"{{C-bill_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/bill/delete/e883bcba-e6b7-4610-b055-9f8a5ef3f105' \\\n  -X 'DELETE' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_list_bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_view = data.bill_view;",
									"console.log(\"bill_view: \" + bill_view);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let bill_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-bill_id\",bill_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(\"get_quote_detail\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_bill_detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_view = data.bill_view;",
									"console.log(\"bill_view: \" + bill_view);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/get-one/{{C-bill_id}}?business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"get-one",
								"{{C-bill_id}}"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mass_delete_bill",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let payload = {",
									"    \"action\": \"delete\",",
									"    \"ids\": [",
									"        pm.environment.get(\"C-bill_id\")",
									"    ],",
									"    \"description\": \"\",",
									"    \"emails\": []",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let bill_delete = data.bill_delete;",
									"console.log(\"bill_delete: \" + bill_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(bill_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"pm.environment.unset(\"C-bill_id\");",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/bill/mass-actions",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"bill",
								"mass-actions"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/bill/mass-actions' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"action\":\"delete\",\"ids\":[\"33ca1235-53af-48e5-92d3-3055f4cc28fa\"],\"description\":\"\",\"emails\":[]}' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "recurring_invoice",
			"item": [
				{
					"name": "get_recurrinng_invoice_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let product_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got product_recurring_invoice_obj: \", product_obj);",
									"pm.environment.set(\"C-product_recurring_invoice_obj\",product_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-list?business_id={{C-business_id}}&page=1&page_size=50&search=&sort=",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "sort",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_recurring_invoice_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let contact_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got contact_recurring_invoice_obj: \", contact_obj);",
									"pm.environment.set(\"C-contact_recurring_invoice_obj\",contact_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "option",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "complete",
									"description": "waiting_confirm,delivering,complete",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "false",
									"description": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_recurring_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"RECINV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book recurring invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_recurring_invoice_obj\");",
									"let product_obj = pm.environment.get(\"C-product_recurring_invoice_obj\");",
									"",
									"let payload = {",
									"    \"cart_status\": \"draft\",",
									"    \"contact_id\": contact_obj.id,",
									"    \"recurrence_type\": \"monthly\",",
									"    \"day_of_type\": \"start_of_month\",",
									"    \"due_date_type\": \"after_creation_date\",",
									"    \"due_date_value\": \"1\",",
									"    \"start_date\": value_at,",
									"    \"end_date\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"currency\": \"vnd\",",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"account_id\": 0,",
									"                \"item_amount\": product_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 121000,",
									"                // \"after_tax_amount\": 121000,",
									"                \"discount_amount\": 0,",
									"                \"item_tax_amount\": 0,",
									"                // \"total_item_amount\": 121000,",
									"                // \"total_line_item_amount\": 121000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_obj.id,",
									"                    \"product_name\": product_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_obj.product_name,",
									"                    \"sku_code\": order_code,",
									"                    \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 121000,",
									"                    // \"max_sale_price\": 121000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": false,",
									"                    \"is_in_business\": false,",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        // \"items_amount\": 121000,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        // \"total_amount\": 121000,",
									"        \"email\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_create = data.recurring_invoice_create;",
									"console.log(\"recurring_invoice_create: \" + recurring_invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"if(recurring_invoice_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let recurring_invoice_id = jsData.data.id;",
									"        pm.environment.set(\"C-recurring_invoice_id\",recurring_invoice_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/recurring/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"cart_status\":\"draft\",\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"recurrence_type\":\"monthly\",\"day_of_type\":\"start_of_month\",\"due_date_type\":\"after_creation_date\",\"due_date_value\":\"1\",\"start_date\":\"2024-10-09T17:00:00.000Z\",\"end_date\":\"2024-10-10T16:59:59.999Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"currency\":\"vnd\",\"sale_order_info\":{\"items\":[{\"sku_id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"account_id\":0,\"item_amount\":121000,\"before_tax_amount\":121000,\"after_tax_amount\":121000,\"discount_amount\":0,\"item_tax_amount\":0,\"total_item_amount\":121000,\"total_line_item_amount\":121000,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"product_type\":\"physical\",\"sku_name\":\"[API] Book product PRDpPqFsf\",\"sku_code\":\"PRDpPqFsf\",\"sale_price\":121000,\"min_sale_price\":121000,\"max_sale_price\":121000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":false,\"is_in_business\":false,\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":121000,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":121000,\"email\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_list_recurring_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_view = data.recurring_invoice_view;",
									"console.log(\"recurring_invoice_view: \" + recurring_invoice_view);",
									"",
									"const jsData = pm.response.json();",
									"if(recurring_invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let recurring_invoice_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-recurring_invoice_id\",recurring_invoice_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(\"get_quote_detail\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_recurring_invoice_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"RECINV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API] Book recurring invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_recurring_invoice_obj\");",
									"let product_obj = pm.environment.get(\"C-product_recurring_invoice_obj\");",
									"",
									"let payload = {",
									"    \"cart_status\": \"draft\",",
									"    \"contact_id\": contact_obj.id,",
									"    \"recurrence_type\": \"monthly\",",
									"    \"day_of_type\": \"start_of_month\",",
									"    \"due_date_type\": \"after_creation_date\",",
									"    \"due_date_value\": \"1\",",
									"    \"start_date\": value_at,",
									"    \"end_date\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"currency\": \"vnd\",",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"account_id\": 0,",
									"                \"item_amount\": product_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 121000,",
									"                // \"after_tax_amount\": 121000,",
									"                \"discount_amount\": 0,",
									"                \"item_tax_amount\": 0,",
									"                // \"total_item_amount\": 121000,",
									"                // \"total_line_item_amount\": 121000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_obj.id,",
									"                    \"product_name\": product_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_obj.product_name,",
									"                    \"sku_code\": order_code,",
									"                    \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 121000,",
									"                    // \"max_sale_price\": 121000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": false,",
									"                    \"is_in_business\": false,",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        // \"items_amount\": 121000,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        // \"total_amount\": 121000,",
									"        \"email\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_create = data.recurring_invoice_create;",
									"console.log(\"recurring_invoice_create: \" + recurring_invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"let recurring_invoice_id = jsData.data.id;",
									"pm.environment.set(\"C-recurring_invoice_id\",recurring_invoice_id);",
									"   ",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/recurring/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"cart_status\":\"draft\",\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"recurrence_type\":\"monthly\",\"day_of_type\":\"start_of_month\",\"due_date_type\":\"after_creation_date\",\"due_date_value\":\"1\",\"start_date\":\"2024-10-09T17:00:00.000Z\",\"end_date\":\"2024-10-10T16:59:59.999Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"currency\":\"vnd\",\"sale_order_info\":{\"items\":[{\"sku_id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"account_id\":0,\"item_amount\":121000,\"before_tax_amount\":121000,\"after_tax_amount\":121000,\"discount_amount\":0,\"item_tax_amount\":0,\"total_item_amount\":121000,\"total_line_item_amount\":121000,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"product_type\":\"physical\",\"sku_name\":\"[API] Book product PRDpPqFsf\",\"sku_code\":\"PRDpPqFsf\",\"sale_price\":121000,\"min_sale_price\":121000,\"max_sale_price\":121000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":false,\"is_in_business\":false,\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":121000,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":121000,\"email\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "update_recurring_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let order_code = \"RECINV\" + list_func.randomChars(6);",
									"let invoice_note = \"[API][Edit] Book recurring invoice \" + order_code;",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_obj = pm.environment.get(\"C-contact_recurring_invoice_obj\");",
									"let product_obj = pm.environment.get(\"C-product_recurring_invoice_obj\");",
									"",
									"let payload = {",
									"    \"cart_status\": \"draft\",",
									"    \"contact_id\": contact_obj.id,",
									"    \"recurrence_type\": \"monthly\",",
									"    \"day_of_type\": \"start_of_month\",",
									"    \"due_date_type\": \"after_creation_date\",",
									"    \"due_date_value\": \"1\",",
									"    \"start_date\": value_at,",
									"    \"end_date\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"currency\": \"vnd\",",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_obj.id,",
									"                \"product_name\": product_obj.product_name,",
									"                \"account_id\": 0,",
									"                \"item_amount\": product_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 121000,",
									"                // \"after_tax_amount\": 121000,",
									"                \"discount_amount\": 0,",
									"                \"item_tax_amount\": 0,",
									"                // \"total_item_amount\": 121000,",
									"                // \"total_line_item_amount\": 121000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_obj.id,",
									"                    \"product_name\": product_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_obj.product_name,",
									"                    \"sku_code\": order_code,",
									"                    \"sale_price\": product_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 121000,",
									"                    // \"max_sale_price\": 121000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": false,",
									"                    \"is_in_business\": false,",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        // \"items_amount\": 121000,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        // \"total_amount\": 121000,",
									"        \"email\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_update = data.recurring_invoice_update;",
									"console.log(\"recurring_invoice_update: \" + recurring_invoice_update);",
									"",
									"const jsData = pm.response.json();",
									"if(recurring_invoice_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/update/{{C-recurring_invoice_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"update",
								"{{C-recurring_invoice_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/recurring/update/181650c3-7140-4817-a292-a3c3bc2fd6b9' \\\n  -X 'PUT' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"cart_status\":\"draft\",\"contact_id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"recurrence_type\":\"monthly\",\"day_of_type\":\"start_of_month\",\"due_date_type\":\"after_creation_date\",\"due_date_value\":\"1\",\"start_date\":\"2024-10-09T17:00:00.000Z\",\"end_date\":\"2024-10-10T16:59:59.999Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"currency\":\"vnd\",\"sale_order_info\":{\"items\":[{\"sku_id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"product_name\":\"[API] Book product PRDpPqFsf\",\"account_id\":0,\"item_amount\":121000,\"before_tax_amount\":121000,\"after_tax_amount\":121000,\"discount_amount\":0,\"item_tax_amount\":121000,\"total_item_amount\":121000,\"total_line_item_amount\":121000,\"quantity\":1,\"taxes\":[],\"sku_info\":{\"id\":\"3ea67c7b-a542-4ff3-8429-a891a1e030af\",\"uom\":\"\",\"sku_code\":\"PRDpPqFsf\",\"sku_name\":\"[API] Book product PRDpPqFsf\",\"inventory\":{\"batches\":null,\"cost_price\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"total_quantity\":0,\"total_can_pick_quantity\":0,\"total_delivery_quantity\":0},\"is_hidden\":false,\"cost_price\":0,\"product_id\":\"63b0e4ba-0888-4d0a-b29e-de6eed48ca9f\",\"sale_price\":121000,\"shelf_life\":0,\"track_batch\":false,\"product_name\":\"[API] Book product PRDpPqFsf\",\"product_type\":\"physical\",\"selling_price\":0,\"sold_quantity\":0,\"is_in_business\":false,\"max_cost_price\":0,\"max_sale_price\":121000,\"min_cost_price\":0,\"min_sale_price\":121000,\"shelf_life_unit\":\"\",\"track_inventory\":false,\"warning_quantity\":0,\"allow_negative_inventory\":false},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":121000,\"discount_amount\":0,\"tax_amount\":0,\"total_amount\":121000,\"email\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_detail_recurring_invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_view = data.recurring_invoice_view;",
									"console.log(\"recurring_invoice_view: \" + recurring_invoice_view);",
									"",
									"const jsData = pm.response.json();",
									"if(recurring_invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/get-one/{{C-recurring_invoice_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"get-one",
								"{{C-recurring_invoice_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_recurring_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let recurring_invoice_delete = data.recurring_invoice_delete;",
									"console.log(\"recurring_invoice_delete: \" + recurring_invoice_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(recurring_invoice_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-recurring_invoice_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/recurring/delete/{{C-recurring_invoice_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"recurring",
								"delete",
								"{{C-recurring_invoice_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/recurring/delete/181650c3-7140-4817-a292-a3c3bc2fd6b9' \\\n  -X 'DELETE' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "e-invoice",
			"item": [
				{
					"name": "get_einvoice_invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let invoice_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got invoice_obj: \", invoice_obj);",
									"pm.environment.set(\"C-invoice_obj\",invoice_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}",
								"type": "text"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "status",
									"value": "unsent,sent",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_einvoice_serial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let e_invoice_serial = \"\";",
									"try{",
									"    e_invoice_serial = jsData.data.invoice_codes[list_func.getRandomInt(0,jsData.data.invoice_codes.length - 1)].serial;",
									"} catch {",
									"    console.log(\"Missing serial, \", jsData);",
									"}",
									"console.log(\"got e_invoice_serial: \", e_invoice_serial);",
									"pm.environment.set(\"C-e_invoice_serial\",e_invoice_serial);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{finone_url}}/invoice/ta-links?service=finan",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"invoice",
								"ta-links"
							],
							"query": [
								{
									"key": "service",
									"value": "finan"
								}
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/invoice/ta-links?service=finan' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_e_invoice_linked",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let e_invoice_view = data.e_invoice_view;",
									"console.log(\"e_invoice_view: \" + e_invoice_view);",
									"",
									"const jsData = pm.response.json();",
									"if(e_invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    // pm.test(\"message: \" + jsData.message.content, function () {",
									"    //     pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    // });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/invoice/ta-links?service=finan",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"invoice",
								"ta-links"
							],
							"query": [
								{
									"key": "service",
									"value": "finan"
								}
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/invoice/ta-links?service=finan' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_e_invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let invoice_obj = pm.environment.get(\"C-invoice_obj\");",
									"",
									"let payload = {",
									"    \"data\": [",
									"        {",
									"            \"id\": invoice_obj.id,",
									"            \"buyer_get_invoice\": true,",
									"            \"kind\": \"minvoice\",",
									"            \"company_tax_code\": \"\",",
									"            \"invoice\": {",
									"                \"id\": invoice_obj.id,",
									"                \"pattern\": \"\",",
									"                \"series\": pm.environment.get(\"C-e_invoice_serial\")",
									"            },",
									"            \"buyer\": {",
									"                \"fullname\": \"Test e-invoice Customer\",",
									"                \"business_name\": \"\",",
									"                \"business_address\": \"\",",
									"                \"business_phone\": \"\",",
									"                \"business_email\": \"\"",
									"            },",
									"            \"contact_info\": invoice_obj.contact_info,",
									"            \"order_code\": invoice_obj.order_code,",
									"            \"service\": \"finan\"",
									"        }",
									"    ]",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let e_invoice_create = data.e_invoice_create;",
									"console.log(\"e_invoice_create: \" + e_invoice_create);",
									"",
									"const jsData = pm.response.json();",
									"if(e_invoice_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let e_invoice_id = \"\";",
									"        try {",
									"            e_invoice_id = jsData.data.error[0].einvoice_id;",
									"        } catch {",
									"            console.log(\"debug success: \", jsData);",
									"            ",
									"        }",
									"        pm.environment.set(\"C-e_invoice_id\",e_invoice_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/invoice/issue",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"invoice",
								"issue"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/invoice/issue' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"data\":[{\"id\":\"a51ec4b7-1981-40cc-b237-68e5718550a2\",\"buyer_get_invoice\":true,\"kind\":\"minvoice\",\"company_tax_code\":\"\",\"invoice\":{\"id\":\"a51ec4b7-1981-40cc-b237-68e5718550a2\",\"pattern\":\"\",\"series\":\"1C24TNS\"},\"buyer\":{\"fullname\":\"Test Import Customer\",\"business_name\":\"\",\"business_address\":\"\",\"business_phone\":\"\",\"business_email\":\"\"},\"contact_info\":{\"id\":\"8aa46310-26f3-4213-857a-b5932c34820d\",\"type\":\"personal\",\"ward\":\"\",\"email\":\"\",\"avatar\":\"\",\"gender\":\"\",\"org_id\":0,\"address\":\"\",\"birthday\":\"0001-01-01T00:00:00Z\",\"district\":\"\",\"province\":\"\",\"tax_code\":\"\",\"business_id\":134,\"contact_code\":\"C00037\",\"contact_name\":\"Test Import Customer\",\"phone_number\":\"\",\"detail_address\":\"\",\"area_level1_name\":\"\",\"area_level2_name\":\"\",\"area_level3_name\":\"\"},\"order_code\":\"INV6pUjGa\",\"service\":\"finan\"}]}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_e_invoice_detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let e_invoice_view = data.e_invoice_view;",
									"console.log(\"e_invoice_view: \" + e_invoice_view);",
									"",
									"// const jsData = pm.response.json();",
									"if(e_invoice_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    // pm.test(\"message: \" + jsData.message.content, function () {",
									"    //     pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    // });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    // let error_message = \"\";",
									"    // try {",
									"    //     error_message = jsData.error.detail;",
									"    // } catch {",
									"    //     console.log(\"error: \", jsData);",
									"    // }",
									"    // pm.test(\"message: \" + error_message, function () {",
									"    //     pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    // });",
									"}",
									"",
									"// pm.environment.unset(\"C-e_invoice_id\");",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/invoice/invoices/269423a6-2e5a-49b6-9086-1518f65444bf?output=preview",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"invoice",
								"invoices",
								"269423a6-2e5a-49b6-9086-1518f65444bf"
							],
							"query": [
								{
									"key": "output",
									"value": "preview"
								}
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/invoice/invoices/2e549d2f-b443-48d6-a800-a994f4238054?output=preview' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "quote",
			"item": [
				{
					"name": "get_quote_product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let product_quote_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got product_quote_obj: \", product_quote_obj);",
									"pm.environment.set(\"C-product_quote_obj\",product_quote_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/product/get-list?business_id={{C-business_id}}&page=1&page_size=50&search=&sort=",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"product",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "sort",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_quote_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsData = pm.response.json();",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let contact_quote_obj = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)];",
									"console.log(\"got contact_quote_obj: \", contact_quote_obj);",
									"pm.environment.set(\"C-contact_quote_obj\",contact_quote_obj);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?business_id={{C-business_id}}&page=1&page_size=50",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "option",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "complete",
									"description": "waiting_confirm,delivering,complete",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "false",
									"description": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let quote_code = \"BG\" + list_func.randomChars(6);",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_quote_obj = pm.environment.get(\"C-contact_quote_obj\");",
									"let product_quote_obj = pm.environment.get(\"C-product_quote_obj\");",
									"",
									"let payload = {",
									"    \"contact_id\": contact_quote_obj.id,",
									"    \"value_at\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"quote_code\": quote_code,",
									"    \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_quote_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_quote_obj.id,",
									"                \"product_name\": product_quote_obj.product_name,",
									"                // \"account_id\": 1004565,",
									"                \"item_amount\": product_quote_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 36000,",
									"                // \"after_tax_amount\": 38513,",
									"                \"discount_amount\": 0,",
									"                // \"item_tax_amount\": 2513,",
									"                // \"total_item_amount\": 36000,",
									"                // \"total_line_item_amount\": 36000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_quote_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_quote_obj.id,",
									"                    \"product_name\": product_quote_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_quote_obj.product_name,",
									"                    \"sku_code\": product_quote_obj.list_sku[0].sku_code,",
									"                    \"sale_price\": product_quote_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 36000,",
									"                    // \"max_sale_price\": 36000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": true,",
									"                    \"is_in_business\": false,",
									"                    // \"product_link_account\": {",
									"                    //     \"id\": \"143c11c6-7673-4631-8063-93b06e5bba5e\",",
									"                    //     \"product_id\": \"5e155c2e-48d8-4831-b121-954a35a0006d\",",
									"                    //     \"is_income_recorded\": true,",
									"                    //     \"income_account_id\": 1004565,",
									"                    //     \"is_expense_recorded\": true,",
									"                    //     \"expense_account_id\": 1004145",
									"                    // },",
									"                    \"income_taxes\": [],",
									"                    \"expense_taxes\": [],",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        \"items_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"sub_total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"email\": \"\",",
									"        \"is_pre_tax\": false,",
									"        \"reference_code\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_create = data.quote_create;",
									"console.log(\"quote_create: \" + quote_create);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let quote_id = jsData.data.id;",
									"        pm.environment.set(\"C-quote_id\",quote_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/quote/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"contact_id\":\"078e4e08-5f30-40d4-ba8a-96bd0c87c3b9\",\"value_at\":\"2024-10-07T17:00:00.000Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"quote_code\":\"BG0002\",\"total_amount\":38513,\"sale_order_info\":{\"items\":[{\"sku_id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"product_name\":\"[API] Product zRQpLAk0\",\"account_id\":1004565,\"item_amount\":36000,\"before_tax_amount\":36000,\"after_tax_amount\":38513,\"discount_amount\":0,\"item_tax_amount\":2513,\"total_item_amount\":36000,\"total_line_item_amount\":36000,\"quantity\":1,\"taxes\":[{\"id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"rate\":6.98,\"amount\":2513}],\"sku_info\":{\"id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"product_name\":\"[API] Product zRQpLAk0\",\"product_type\":\"physical\",\"sku_name\":\"[API] Product zRQpLAk0\",\"sku_code\":\"zRQpLAk0\",\"sale_price\":36000,\"min_sale_price\":36000,\"max_sale_price\":36000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":true,\"is_in_business\":false,\"product_link_account\":{\"id\":\"143c11c6-7673-4631-8063-93b06e5bba5e\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"is_income_recorded\":true,\"income_account_id\":1004565,\"is_expense_recorded\":true,\"expense_account_id\":1004145},\"income_taxes\":[{\"id\":\"c6697700-1f28-4e7e-a768-7eb40e69f090\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"income\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98}],\"expense_taxes\":[{\"id\":\"56b1b880-6e82-4a3a-8c08-514f6758fa0d\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"expense\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98}],\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":36000,\"discount_amount\":0,\"tax_amount\":2513,\"total_amount\":38513,\"sub_total_amount\":36000,\"email\":\"\",\"is_pre_tax\":false,\"reference_code\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_list_quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_view = data.quote_view;",
									"console.log(\"quote_view: \" + quote_view);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let quote_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-quote_id\",quote_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"// postman.setNextRequest(\"get_quote_detail\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/quote/get-list?page=1&page_size=10&search=&status=&business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"get-list"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "10"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "status",
									"value": ""
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/get-list?page=1&page_size=10&search=&status=&business_id=134' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "create_quote_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let quote_code = \"BG\" + list_func.randomChars(6);",
									"",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_quote_obj = pm.environment.get(\"C-contact_quote_obj\");",
									"let product_quote_obj = pm.environment.get(\"C-product_quote_obj\");",
									"",
									"let payload = {",
									"    \"contact_id\": contact_quote_obj.id,",
									"    \"value_at\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"quote_code\": quote_code,",
									"    \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_quote_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_quote_obj.id,",
									"                \"product_name\": product_quote_obj.product_name,",
									"                // \"account_id\": 1004565,",
									"                \"item_amount\": product_quote_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 36000,",
									"                // \"after_tax_amount\": 38513,",
									"                \"discount_amount\": 0,",
									"                // \"item_tax_amount\": 2513,",
									"                // \"total_item_amount\": 36000,",
									"                // \"total_line_item_amount\": 36000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_quote_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_quote_obj.id,",
									"                    \"product_name\": product_quote_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_quote_obj.product_name,",
									"                    \"sku_code\": product_quote_obj.list_sku[0].sku_code,",
									"                    \"sale_price\": product_quote_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 36000,",
									"                    // \"max_sale_price\": 36000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": true,",
									"                    \"is_in_business\": false,",
									"                    // \"product_link_account\": {",
									"                    //     \"id\": \"143c11c6-7673-4631-8063-93b06e5bba5e\",",
									"                    //     \"product_id\": \"5e155c2e-48d8-4831-b121-954a35a0006d\",",
									"                    //     \"is_income_recorded\": true,",
									"                    //     \"income_account_id\": 1004565,",
									"                    //     \"is_expense_recorded\": true,",
									"                    //     \"expense_account_id\": 1004145",
									"                    // },",
									"                    \"income_taxes\": [],",
									"                    \"expense_taxes\": [],",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        \"items_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"sub_total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"email\": \"\",",
									"        \"is_pre_tax\": false,",
									"        \"reference_code\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_create = data.quote_create;",
									"console.log(\"quote_create: \" + quote_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let quote_id = jsData.data.id;",
									"pm.environment.set(\"C-quote_id\",quote_id);",
									"    "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/quote/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"create"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/create' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"contact_id\":\"078e4e08-5f30-40d4-ba8a-96bd0c87c3b9\",\"value_at\":\"2024-10-07T17:00:00.000Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"quote_code\":\"BG0002\",\"total_amount\":38513,\"sale_order_info\":{\"items\":[{\"sku_id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"product_name\":\"[API] Product zRQpLAk0\",\"account_id\":1004565,\"item_amount\":36000,\"before_tax_amount\":36000,\"after_tax_amount\":38513,\"discount_amount\":0,\"item_tax_amount\":2513,\"total_item_amount\":36000,\"total_line_item_amount\":36000,\"quantity\":1,\"taxes\":[{\"id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"rate\":6.98,\"amount\":2513}],\"sku_info\":{\"id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"product_name\":\"[API] Product zRQpLAk0\",\"product_type\":\"physical\",\"sku_name\":\"[API] Product zRQpLAk0\",\"sku_code\":\"zRQpLAk0\",\"sale_price\":36000,\"min_sale_price\":36000,\"max_sale_price\":36000,\"cost_price\":0,\"min_cost_price\":0,\"max_cost_price\":0,\"selling_price\":0,\"sold_quantity\":0,\"uom\":\"\",\"warning_quantity\":0,\"allow_negative_inventory\":false,\"track_inventory\":false,\"track_batch\":false,\"shelf_life\":0,\"shelf_life_unit\":\"\",\"is_hidden\":true,\"is_in_business\":false,\"product_link_account\":{\"id\":\"143c11c6-7673-4631-8063-93b06e5bba5e\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"is_income_recorded\":true,\"income_account_id\":1004565,\"is_expense_recorded\":true,\"expense_account_id\":1004145},\"income_taxes\":[{\"id\":\"c6697700-1f28-4e7e-a768-7eb40e69f090\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"income\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98}],\"expense_taxes\":[{\"id\":\"56b1b880-6e82-4a3a-8c08-514f6758fa0d\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"expense\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98}],\"inventory\":{\"cost_price\":0,\"total_quantity\":0,\"total_delivery_quantity\":0,\"total_can_pick_quantity\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"batches\":null}},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":36000,\"discount_amount\":0,\"tax_amount\":2513,\"total_amount\":38513,\"sub_total_amount\":36000,\"email\":\"\",\"is_pre_tax\":false,\"reference_code\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "get_quote_detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_view = data.quote_view;",
									"console.log(\"quote_view: \" + quote_view);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/quote/get-one/{{C-quote_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"get-one",
								"{{C-quote_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/get-one/70dc0bd4-ccf2-48eb-945f-0fc729d813b1' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "edit_quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);",
									"",
									"let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"let quote_code = \"BGE\" + list_func.randomChars(6);",
									"let date = new Date();",
									"let value_at = date.toISOString();",
									"",
									"let contact_quote_obj = pm.environment.get(\"C-contact_quote_obj\");",
									"let product_quote_obj = pm.environment.get(\"C-product_quote_obj\");",
									"",
									"let payload = {",
									"    \"contact_id\": contact_quote_obj.id,",
									"    \"value_at\": value_at,",
									"    \"note\": \"\",",
									"    \"status\": \"draft\",",
									"    \"branch_id\": pm.environment.get(\"C-branch_id\"),",
									"    \"quote_code\": quote_code,",
									"    \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"    \"sale_order_info\": {",
									"        \"items\": [",
									"            {",
									"                \"sku_id\": product_quote_obj.list_sku[0].sku_id,",
									"                \"product_id\": product_quote_obj.id,",
									"                \"product_name\": product_quote_obj.product_name,",
									"                // \"account_id\": 1004565,",
									"                \"item_amount\": product_quote_obj.list_sku[0].sale_price,",
									"                // \"before_tax_amount\": 36000,",
									"                // \"after_tax_amount\": 38513,",
									"                \"discount_amount\": 0,",
									"                // \"item_tax_amount\": 2513,",
									"                // \"total_item_amount\": 36000,",
									"                // \"total_line_item_amount\": 36000,",
									"                \"quantity\": 1,",
									"                \"taxes\": [],",
									"                \"sku_info\": {",
									"                    \"id\": product_quote_obj.list_sku[0].sku_id,",
									"                    \"product_id\": product_quote_obj.id,",
									"                    \"product_name\": product_quote_obj.product_name,",
									"                    \"product_type\": \"physical\",",
									"                    \"sku_name\": product_quote_obj.product_name,",
									"                    \"sku_code\": product_quote_obj.list_sku[0].sku_code,",
									"                    \"sale_price\": product_quote_obj.list_sku[0].sale_price,",
									"                    // \"min_sale_price\": 36000,",
									"                    // \"max_sale_price\": 36000,",
									"                    \"cost_price\": 0,",
									"                    \"min_cost_price\": 0,",
									"                    \"max_cost_price\": 0,",
									"                    \"selling_price\": 0,",
									"                    \"sold_quantity\": 0,",
									"                    \"uom\": \"\",",
									"                    \"warning_quantity\": 0,",
									"                    \"allow_negative_inventory\": false,",
									"                    \"track_inventory\": false,",
									"                    \"track_batch\": false,",
									"                    \"shelf_life\": 0,",
									"                    \"shelf_life_unit\": \"\",",
									"                    \"is_hidden\": true,",
									"                    \"is_in_business\": false,",
									"                    // \"product_link_account\": {",
									"                    //     \"id\": \"143c11c6-7673-4631-8063-93b06e5bba5e\",",
									"                    //     \"product_id\": \"5e155c2e-48d8-4831-b121-954a35a0006d\",",
									"                    //     \"is_income_recorded\": true,",
									"                    //     \"income_account_id\": 1004565,",
									"                    //     \"is_expense_recorded\": true,",
									"                    //     \"expense_account_id\": 1004145",
									"                    // },",
									"                    \"income_taxes\": [],",
									"                    \"expense_taxes\": [],",
									"                    \"inventory\": {",
									"                        \"cost_price\": 0,",
									"                        \"total_quantity\": 0,",
									"                        \"total_delivery_quantity\": 0,",
									"                        \"total_can_pick_quantity\": 0,",
									"                        \"last_updated\": \"0001-01-01T00:00:00Z\",",
									"                        \"batches\": null",
									"                    }",
									"                },",
									"                \"note\": \"\"",
									"            }",
									"        ],",
									"        \"discounts\": [",
									"            {",
									"                \"is_rate\": true,",
									"                \"value\": 0",
									"            }",
									"        ],",
									"        \"payment_config\": [],",
									"        \"tax_type\": \"price_excluding_tax\",",
									"        \"attachment_url\": [],",
									"        \"items_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"discount_amount\": 0,",
									"        \"tax_amount\": 0,",
									"        \"total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"sub_total_amount\": product_quote_obj.list_sku[0].sale_price,",
									"        \"email\": \"\",",
									"        \"is_pre_tax\": false,",
									"        \"reference_code\": \"\"",
									"    },",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"",
									"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_update = data.quote_update;",
									"console.log(\"quote_update: \" + quote_update);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{C-payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://stg-api.finan.one/fo-order/api/v1/quote/update/{{C-quote_id}}",
							"protocol": "https",
							"host": [
								"stg-api",
								"finan",
								"one"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"update",
								"{{C-quote_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/update/70dc0bd4-ccf2-48eb-945f-0fc729d813b1' \\\n  -X 'PUT' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'content-type: application/json' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --data-raw '{\"contact_id\":\"04c8ce46-0e8a-469d-bf0d-6720930f2390\",\"value_at\":\"2024-10-07T17:00:00.000Z\",\"note\":\"\",\"status\":\"draft\",\"branch_id\":\"d3c3ebf5-b488-4481-b4d3-d3323092f165\",\"quote_code\":\"BG0001\",\"total_amount\":299544,\"sale_order_info\":{\"items\":[{\"sku_id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"product_name\":\"[API] Product zRQpLAk0\",\"account_id\":1004565,\"item_amount\":36000,\"before_tax_amount\":180000,\"after_tax_amount\":192564,\"discount_amount\":0,\"item_tax_amount\":12564,\"total_item_amount\":180000,\"total_line_item_amount\":180000,\"quantity\":5,\"taxes\":[{\"id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"rate\":6.98,\"amount\":19544}],\"sku_info\":{\"id\":\"1f96e8eb-218c-4e45-b90d-f9599cb1ca42\",\"uom\":\"\",\"sku_code\":\"zRQpLAk0\",\"sku_name\":\"[API] Product zRQpLAk0\",\"inventory\":{\"batches\":null,\"cost_price\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"total_quantity\":0,\"total_can_pick_quantity\":0,\"total_delivery_quantity\":0},\"is_hidden\":true,\"cost_price\":0,\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"sale_price\":36000,\"shelf_life\":0,\"track_batch\":false,\"income_taxes\":[{\"id\":\"c6697700-1f28-4e7e-a768-7eb40e69f090\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98,\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"income\"}],\"product_name\":\"[API] Product zRQpLAk0\",\"product_type\":\"physical\",\"expense_taxes\":[{\"id\":\"56b1b880-6e82-4a3a-8c08-514f6758fa0d\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98,\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"account_type\":\"expense\"}],\"selling_price\":0,\"sold_quantity\":0,\"is_in_business\":false,\"max_cost_price\":0,\"max_sale_price\":36000,\"min_cost_price\":0,\"min_sale_price\":36000,\"shelf_life_unit\":\"\",\"track_inventory\":false,\"warning_quantity\":0,\"product_link_account\":{\"id\":\"143c11c6-7673-4631-8063-93b06e5bba5e\",\"product_id\":\"5e155c2e-48d8-4831-b121-954a35a0006d\",\"income_account_id\":1004565,\"expense_account_id\":1004145,\"is_income_recorded\":true,\"is_expense_recorded\":true},\"allow_negative_inventory\":false},\"note\":\"\"},{\"sku_id\":\"8d5192b8-0344-427c-ae96-a623dc2af1b3\",\"product_id\":\"7b601e48-a435-4f00-b14c-49c90d3ce96a\",\"product_name\":\"[API] Product 5GeWblbM\",\"account_id\":1004139,\"item_amount\":50000,\"before_tax_amount\":100000,\"after_tax_amount\":106980,\"discount_amount\":0,\"item_tax_amount\":6980,\"total_item_amount\":100000,\"total_line_item_amount\":100000,\"quantity\":2,\"taxes\":[{\"id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"rate\":6.98,\"amount\":6980}],\"sku_info\":{\"id\":\"8d5192b8-0344-427c-ae96-a623dc2af1b3\",\"uom\":\"\",\"sku_code\":\"5GeWblbM\",\"sku_name\":\"[API] Product 5GeWblbM\",\"inventory\":{\"batches\":null,\"cost_price\":0,\"last_updated\":\"0001-01-01T00:00:00Z\",\"total_quantity\":0,\"total_can_pick_quantity\":0,\"total_delivery_quantity\":0},\"is_hidden\":true,\"cost_price\":0,\"product_id\":\"7b601e48-a435-4f00-b14c-49c90d3ce96a\",\"sale_price\":50000,\"shelf_life\":0,\"track_batch\":false,\"income_taxes\":[{\"id\":\"453125ad-5ff8-445c-b60b-1ca32c3ad9ab\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98,\"product_id\":\"7b601e48-a435-4f00-b14c-49c90d3ce96a\",\"account_type\":\"income\"}],\"product_name\":\"[API] Product 5GeWblbM\",\"product_type\":\"physical\",\"expense_taxes\":[{\"id\":\"433f5903-c021-4622-b2eb-44d99e04a995\",\"tax_id\":\"5d6ca59e-5ff1-41bc-8ead-2cc5acfff33d\",\"tax_name\":\"[API] tax 6.98 - D6O9WntM\",\"tax_rate\":6.98,\"product_id\":\"7b601e48-a435-4f00-b14c-49c90d3ce96a\",\"account_type\":\"expense\"}],\"selling_price\":0,\"sold_quantity\":0,\"is_in_business\":false,\"max_cost_price\":0,\"max_sale_price\":50000,\"min_cost_price\":0,\"min_sale_price\":50000,\"shelf_life_unit\":\"\",\"track_inventory\":false,\"warning_quantity\":0,\"product_link_account\":{\"id\":\"0021d241-cc6c-46c9-9044-14928a2fcaa9\",\"product_id\":\"7b601e48-a435-4f00-b14c-49c90d3ce96a\",\"income_account_id\":1004139,\"expense_account_id\":1004155,\"is_income_recorded\":true,\"is_expense_recorded\":true},\"allow_negative_inventory\":false},\"note\":\"\"}],\"discounts\":[{\"is_rate\":true,\"value\":0}],\"payment_config\":[],\"tax_type\":\"price_excluding_tax\",\"attachment_url\":[],\"items_amount\":280000,\"discount_amount\":0,\"tax_amount\":19544,\"total_amount\":299544,\"sub_total_amount\":280000,\"email\":\"\",\"is_pre_tax\":false,\"reference_code\":\"\"},\"business_id\":134}' \\\n  --compressed"
					},
					"response": []
				},
				{
					"name": "delete_quote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// let testcase = pm.environment.get(\"C-testcase\");",
									"let testcase = data.testcase;",
									"console.log(\"Testcase: \" + testcase);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let quote_delete = data.quote_delete;",
									"console.log(\"quote_delete: \" + quote_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(quote_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"    let error_message = \"\";",
									"    try {",
									"        error_message = jsData.error.detail;",
									"    } catch {",
									"        console.log(\"error: \", jsData);",
									"    }",
									"    pm.test(\"message: \" + error_message, function () {",
									"        pm.expect(error_message.includes(\"unauthorized\")).to.be.false;",
									"    });",
									"}",
									"",
									"pm.environment.unset(\"C-quote_id\");",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-order/api/v1/quote/delete/{{C-quote_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-order",
								"api",
								"v1",
								"quote",
								"delete",
								"{{C-quote_id}}"
							]
						},
						"description": "Generated from cURL: curl 'https://stg-api.finan.one/fo-order/api/v1/quote/delete/c8171da4-cac5-4e84-91a2-6212c797186f' \\\n  -X 'DELETE' \\\n  -H 'authority: stg-api.finan.one' \\\n  -H 'accept: */*' \\\n  -H 'accept-language: en-US,en;q=0.9,vi;q=0.8' \\\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiYmY4NmNmZDQtMzljNi00Yzg4LTliNGMtMGZiMGI5MzYxMGJmIiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzI5MzA1NTk2LCJuYmYiOjE3MjY3MTM1OTYsImlhdCI6MTcyNjcxMzU5Niwib3JnX2lkIjoiMTM0IiwiYnVzaW5lc3NfaWQiOiIxMzQiLCJkZXZpY2VfaWQiOiJlNzY2MWRhYy0wNDVkLTQxMTMtYjE5NC03ZTBlNzI0MzQ1ZGYiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiJiZjg2Y2ZkNC0zOWM2LTRjODgtOWI0Yy0wZmIwYjkzNjEwYmYiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiNjU3MjhkNmYtOGVkMS00MWM5LTliM2EtOTVmODczZTA5NjQ1In0.WNG9bsk81BFOJGt8NuepMkh9lR74KkAgoYdl8nU0KhM' \\\n  -H 'origin: https://book-stg.finan.one' \\\n  -H 'referer: https://book-stg.finan.one/' \\\n  -H 'sec-ch-ua: \"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-site' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36' \\\n  -H 'x-locale: vi' \\\n  -H 'x-location-timezone: Asia/Ho_Chi_Minh' \\\n  -H 'x-platform-key: desktop-web' \\\n  --compressed"
					},
					"response": []
				}
			]
		},
		{
			"name": "contact",
			"item": [
				{
					"name": "create_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_create = data.customer_create;",
									"console.log(\"customer_create: \" + customer_create);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let customer_id = jsData.data.id;",
									"        pm.environment.set(\"C-customer_id\",customer_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"console.log(\"Contact id : \",pm.environment.get(\"C-customer_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"area_level1_name\": \"\",\n    \"area_level2_name\": \"\",\n    \"area_level3_name\": \"\",\n    \"birthday\": \"\",\n    \"contact_name\": \"Má»¹ Chi\",\n    \"detail_address\": \"\",\n    \"gender\": \"male\",\n    \"invoice_email_template_id\": null,\n    \"payment_email_template_id\": null,\n    \"tax_code\": \"\",\n    \"contact_code\": \"\",\n    \"type\": \"personal\",\n    \"credit_limit\": null,\n    \"total_receivable\": 0,\n    \"country_code\": \"VNM\",\n    \"country_name\": \"Vietnam\",\n    \"phone_code\": \"+84\",\n    \"invoice_config\": {\n        \"due_date_config\": {\n            \"after_days_issue_date\": null,\n            \"on_invoice_issue_date\": true\n        }\n    },\n    \"payment_info\": [],\n    \"contact_person_info\": [],\n    \"avatar\": \"\",\n    \"email\": \"\",\n    \"phone_number\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_contact_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_view = data.customer_view;",
									"console.log(\"customer_view: \" + customer_view);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let customer_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-customer_id\",customer_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list?page=1&page_size=10&sort=&search=&business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": ""
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_contact_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_create = data.customer_create;",
									"console.log(\"customer_create: \" + customer_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let customer_id = jsData.data.id;",
									"pm.environment.set(\"C-customer_id\",customer_id);",
									"console.log(\"Contact id : \", customer_id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"area_level1_name\": \"\",\n    \"area_level2_name\": \"\",\n    \"area_level3_name\": \"\",\n    \"birthday\": \"\",\n    \"contact_name\": \"Xiáº¿n Xiáº¿n\",\n    \"detail_address\": \"\",\n    \"gender\": \"male\",\n    \"invoice_email_template_id\": null,\n    \"payment_email_template_id\": null,\n    \"tax_code\": \"\",\n    \"contact_code\": \"\",\n    \"type\": \"personal\",\n    \"credit_limit\": null,\n    \"total_receivable\": 0,\n    \"country_code\": \"VNM\",\n    \"country_name\": \"Vietnam\",\n    \"phone_code\": \"+84\",\n    \"invoice_config\": {\n        \"due_date_config\": {\n            \"after_days_issue_date\": null,\n            \"on_invoice_issue_date\": true\n        }\n    },\n    \"payment_info\": [],\n    \"contact_person_info\": [],\n    \"avatar\": \"\",\n    \"email\": \"\",\n    \"phone_number\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_contact_detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_view = data.customer_view;",
									"console.log(\"customer_view: \" + customer_view);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-one/{{C-customer_id}}?business_id={{C-business_id}}&contact_id={{C-customer_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-one",
								"{{C-customer_id}}"
							],
							"query": [
								{
									"key": "address",
									"value": "",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								},
								{
									"key": "end_time",
									"value": "2024-02-16T08%3A12%3A00Z",
									"disabled": true
								},
								{
									"key": "field",
									"value": "contact_tag%2Cmost_order_product",
									"disabled": true
								},
								{
									"key": "name",
									"value": "Chau%20Le%20Test",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "start_time",
									"value": "2024-01-16T17%3A00%3A00Z",
									"disabled": true
								},
								{
									"key": "contact_id",
									"value": "{{C-customer_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "edit_contact",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomNumbers(length) {",
									"    var result           = '';",
									"    var characters       = '0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"",
									"let payload = {",
									"    \"area_level1_name\": \"\",",
									"    \"area_level2_name\": \"\",",
									"    \"area_level3_name\": \"\",",
									"    \"detail_address\": \"\",",
									"    \"birthday\": \"\",",
									"    \"contact_name\": \"Chi Giao\",",
									"    \"gender\": \"male\",",
									"    \"invoice_email_template_id\": null,",
									"    \"payment_email_template_id\": null,",
									"    \"tax_code\": \"\",",
									"    \"type\": \"personal\",",
									"    \"credit_limit\": null,",
									"    \"total_receivable\": 0,",
									"    \"country_code\": \"VNM\",",
									"    \"country_name\": \"Vietnam\",",
									"    \"contact_code\": \"C000\" + randomNumbers(5).toString(),",
									"    \"phone_code\": \"+84\",",
									"    \"invoice_config\": {",
									"        \"due_date_config\": {",
									"            \"after_days_issue_date\": null,",
									"            \"on_invoice_issue_date\": true",
									"        }",
									"    },",
									"    \"payment_info\": [],",
									"    \"contact_person_info\": [],",
									"    \"avatar\": \"\",",
									"    \"email\": \"\",",
									"    \"phone_number\": \"\"",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_update = data.customer_update;",
									"console.log(\"customer_update: \" + customer_update);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/update/{{C-customer_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"update",
								"{{C-customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_list_contact_by_internal_ids",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"business_id\": 0,\n  \"id\": \"string\",\n  \"page\": 0,\n  \"page_size\": 0,\n  \"search\": \"string\",\n  \"sort\": \"string\"\n}"
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/get-list-by-ids",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"get-list-by-ids"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_contact_mass_action",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let payload = {",
									"    \"action\": \"delete\",",
									"    \"ids\": [",
									"        pm.environment.get(\"C-customer_id\")",
									"    ]",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_delete = data.customer_delete;",
									"console.log(\"customer_delete: \" + customer_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-customer_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/mass-action",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"mass-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_contact_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_create = data.customer_create;",
									"console.log(\"customer_create: \" + customer_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let customer_id = jsData.data.id;",
									"pm.environment.set(\"C-customer_id\",customer_id);",
									"console.log(\"Contact id : \", customer_id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"area_level1_name\": \"\",\n    \"area_level2_name\": \"\",\n    \"area_level3_name\": \"\",\n    \"birthday\": \"\",\n    \"contact_name\": \"Xiáº¿n Xiáº¿n\",\n    \"detail_address\": \"\",\n    \"gender\": \"male\",\n    \"invoice_email_template_id\": null,\n    \"payment_email_template_id\": null,\n    \"tax_code\": \"\",\n    \"contact_code\": \"\",\n    \"type\": \"personal\",\n    \"credit_limit\": null,\n    \"total_receivable\": 0,\n    \"country_code\": \"VNM\",\n    \"country_name\": \"Vietnam\",\n    \"phone_code\": \"+84\",\n    \"invoice_config\": {\n        \"due_date_config\": {\n            \"after_days_issue_date\": null,\n            \"on_invoice_issue_date\": true\n        }\n    },\n    \"payment_info\": [],\n    \"contact_person_info\": [],\n    \"avatar\": \"\",\n    \"email\": \"\",\n    \"phone_number\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let customer_delete = data.customer_delete;",
									"console.log(\"customer_delete: \" + customer_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(customer_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-customer_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/contact/delete/{{C-customer_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"contact",
								"delete",
								"{{C-customer_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "branch",
			"item": [
				{
					"name": "create_branch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"let payload = {",
									"    \"branch_name\": \"CN\" + randomChars(5),",
									"    \"branch_code\": \"\",",
									"    \"phone_number\": \"0327007131\",",
									"    \"email\": \"\",",
									"    \"detail_address\": \"\",",
									"    \"is_default\": false,",
									"    \"status\": \"active\",",
									"    \"is_status\": true,",
									"    \"address_info\": {",
									"        \"address\": \"\",",
									"        \"province_id\": \"79\",",
									"        \"province_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"        \"district_id\": \"760\",",
									"        \"district_name\": \"Quáº­n 1\",",
									"        \"ward_id\": \"26743\",",
									"        \"ward_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\"",
									"    },",
									"    \"area_level3_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"    \"area_level2_name\": \"Quáº­n 1\",",
									"    \"area_level1_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\",",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_create = data.branch_create;",
									"console.log(\"branch_create: \" + branch_create);",
									"",
									"const jsData = pm.response.json();",
									"if(branch_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let branch_id = jsData.data.id;",
									"        pm.environment.set(\"C-branch_id\",branch_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"   ",
									"}",
									"console.log(\"branch_create is\", branch_create);",
									"console.log(\"Brand id : \",pm.environment.get(\"C-branch_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_list_branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_view = data.branch_view;",
									"console.log(\"branch_view: \" + branch_view);",
									"",
									"const jsData = pm.response.json();",
									"if(branch_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let branch_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-branch_id\",branch_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?business_id={{C-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"get-list"
							],
							"query": [
								{
									"key": "business_id",
									"value": "{{C-business_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_branch_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"let payload = {",
									"    \"branch_name\": \"CN\" + randomChars(5),",
									"    \"branch_code\": \"\",",
									"    \"phone_number\": \"0327007131\",",
									"    \"email\": \"\",",
									"    \"detail_address\": \"\",",
									"    \"is_default\": false,",
									"    \"status\": \"active\",",
									"    \"is_status\": true,",
									"    \"address_info\": {",
									"        \"address\": \"\",",
									"        \"province_id\": \"79\",",
									"        \"province_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"        \"district_id\": \"760\",",
									"        \"district_name\": \"Quáº­n 1\",",
									"        \"ward_id\": \"26743\",",
									"        \"ward_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\"",
									"    },",
									"    \"area_level3_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"    \"area_level2_name\": \"Quáº­n 1\",",
									"    \"area_level1_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\",",
									"    \"business_id\": parseInt(pm.environment.get(\"C-business_id\"))",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_create = data.branch_create;",
									"console.log(\"branch_create: \" + branch_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let branch_id = jsData.data.id;",
									"pm.environment.set(\"C-branch_id\",branch_id);",
									"   ",
									"console.log(\"branch_create is\", branch_create);",
									"console.log(\"Brand id : \",pm.environment.get(\"C-branch_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_branch_detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_view = data.branch_view;",
									"console.log(\"branch_view: \" + branch_view);",
									"",
									"const jsData = pm.response.json();",
									"if(branch_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/get-one/{{C-branch_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"get-one",
								"{{C-branch_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit_branch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"let payload = {",
									"    \"branch_name\": \"CN\" + randomChars(5),",
									"    \"branch_code\": \"\",",
									"    \"phone_number\": \"0327007131\",",
									"    \"email\": \"\",",
									"    \"detail_address\": \"\",",
									"    \"is_default\": false,",
									"    \"status\": \"active\",",
									"    \"is_status\": true,",
									"    \"address_info\": {",
									"        \"address\": \"\",",
									"        \"province_id\": \"79\",",
									"        \"province_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"        \"district_id\": \"760\",",
									"        \"district_name\": \"Quáº­n 1\",",
									"        \"ward_id\": \"26743\",",
									"        \"ward_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\"",
									"    },",
									"    \"area_level3_name\": \"ThÃ nh phá» Há» ChÃ­ Minh\",",
									"    \"area_level2_name\": \"Quáº­n 1\",",
									"    \"area_level1_name\": \"PhÆ°á»ng Báº¿n ThÃ nh\",",
									"    \"business_id\": 305",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_update = data.branch_update;",
									"console.log(\"branch_update: \" + branch_update);",
									"",
									"const jsData = pm.response.json();",
									"if(branch_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/update/{{C-branch_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"update",
								"{{C-branch_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let branch_delete = data.branch_delete;",
									"console.log(\"branch_delete: \" + branch_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(branch_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-branch_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/branch/delete/{{C-branch_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"branch",
								"delete",
								"{{C-branch_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tax",
			"item": [
				{
					"name": "create_tax",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//let tax_create = data.tax_create;",
									"let tax_create = pm.iterationData.get(\"tax_create\");",
									"console.log(\"tax_create: \" + tax_create);",
									"",
									"const jsData = pm.response.json();",
									"if(tax_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let tax_id = jsData.data.id;",
									"        pm.environment.set(\"C-tax_id\",tax_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"console.log(\"Contact id : \",pm.environment.get(\"C-tax_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"let payload = {",
									"  \"business_id\": 0,",
									"  \"description\": \"string\",",
									"  \"displays_id\": \"string\",",
									"  \"id\": \"string\",",
									"  \"name\": \"tax test\" + randomChars(5),",
									"  \"rate\": 10",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/tax/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"tax",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_tax_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//let tax_create = data.tax_create;",
									"let tax_create = pm.iterationData.get(\"tax_create\");",
									"console.log(\"tax_create: \" + tax_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let tax_id = jsData.data.id;",
									"pm.environment.set(\"C-tax_id\",tax_id);",
									"   ",
									"console.log(\"Tax id : \",pm.environment.get(\"C-tax_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomChars(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * ",
									" charactersLength));",
									"   }",
									"   return result;",
									"}",
									"let payload = {",
									"  \"business_id\": 0,",
									"  \"description\": \"string\",",
									"  \"displays_id\": \"string\",",
									"  \"id\": \"string\",",
									"  \"name\": \"tax test\" + randomChars(5),",
									"  \"rate\": 10",
									"}",
									"pm.environment.set(\"payload\", JSON.stringify(payload));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/tax/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"tax",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_list_tax",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let tax_view = data.tax_view;",
									"console.log(\"tax_view: \" + tax_view);",
									"",
									"const jsData = pm.response.json();",
									"if(tax_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    let tax_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    pm.environment.set(\"C-tax_id\",tax_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/tax/get-list",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"tax",
								"get-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit_tax",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let tax_update = data.tax_update;",
									"console.log(\"tax_update: \" + tax_update);",
									"",
									"const jsData = pm.response.json();",
									"if(tax_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"business_id\": 0,\n  \"description\": \"string\",\n  \"displays_id\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"tax edit\",\n  \"rate\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/tax/update/{{C-tax_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"tax",
								"update",
								"{{C-tax_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_tax",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let tax_delete = data.tax_delete;",
									"console.log(\"tax_delete: \" + tax_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(tax_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"C-tax_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/tax/delete/{{C-tax_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"tax",
								"delete",
								"{{C-tax_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "business_info",
			"item": [
				{
					"name": "get_business_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let business_info_view = data.business_info_view;",
									"console.log(\"business_info_view: \" + business_info_view);",
									"",
									"const jsData = pm.response.json();",
									"if(business_info_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
									"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
									"    // pm.environment.set(\"C-business_id\",business_id);",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/business/get-one/{{X-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"business",
								"get-one",
								"{{X-business_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit_bussiness_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let business_info_update = data.business_info_update;",
									"console.log(\"business_info_update: \" + business_info_update);",
									"",
									"const jsData = pm.response.json();",
									"if(business_info_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lime Busi\",\n    \"tax_code\": \"\",\n    \"phone_number\": \"+84327007116\",\n    \"email\": \"\",\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"detail_address\": \"\",\n    \"area_level3_name\": \"Tá»nh Báº¯c Giang\",\n    \"area_level2_name\": \"Huyá»n YÃªn DÅ©ng\",\n    \"area_level1_name\": \"XÃ£ LÃ£ng SÆ¡n\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-business/api/v1/business/update/{{X-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-business",
								"api",
								"v1",
								"business",
								"update",
								"{{X-business_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "report_app",
			"item": [
				{
					"name": "balance_n_forecast_widget",
					"item": [
						{
							"name": "get_list_branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let branch_view = data.branch_view;",
											"console.log(\"branch_view: \" + branch_view);",
											"",
											"const jsData = pm.response.json();",
											"let branch_id = jsData.data[0].id;",
											"pm.environment.set(\"X-branch_id\", branch_id);",
											"if(branch_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let branch_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-branch_id\",branch_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?business_id={{C-business_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-business",
										"api",
										"v1",
										"branch",
										"get-list"
									],
									"query": [
										{
											"key": "business_id",
											"value": "{{C-business_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_chart_balance_change",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"         let payload = {",
											"                \"business_id\": pm.environment.get(\"X-business_id\"),",
											"                \"period\": \"last_month\", // last_month, month",
											"                \"account_ids\": []",
											"         }",
											"            ",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// const jsData = pm.response.json();",
											"// if(pm.response.code == 200){",
											"//     let testcase = pm.environment.get(\"C-testcase\");",
											"",
											"//     let chart_balance_change = null;",
											"//     let chart_balance_change_last_month = pm.environment.get(\"C-chart_balance_change_last_month\");",
											"//     let invoice_obj, invoice_date;",
											"//     switch(testcase){",
											"//         case 2:",
											"//             let is_get_last = pm.environment.get(\"C-is_get_last\");",
											"",
											"//             if(!is_get_last){",
											"//                 is_get_last = true;",
											"//                 pm.environment.set(\"C-is_get_last\",is_get_last);",
											"",
											"//                 chart_balance_change_last_month = jsData.data.sum_card_data;",
											"//                 pm.environment.set(\"C-chart_balance_change_last_month\",chart_balance_change_last_month);",
											"",
											"//                 postman.setNextRequest(\"get_chart_balance_change\");",
											"//             } else {",
											"//                 chart_balance_change = jsData.data;",
											"//                 pm.test(\"Got chart_balance_change \", function () {",
											"//                     // sum_card_data.total_balance_amount",
											"//                     // dates_data",
											"//                     pm.environment.set(\"C-chart_balance_change\",chart_balance_change);",
											"//                     pm.expect(chart_balance_change != null).to.be.true;",
											"//                 });",
											"",
											"//                 // check data chart & table",
											"//                 let sum_table = {",
											"//                     \"total_debit\":0,",
											"//                     \"total_credit\":0,",
											"//                     \"current_total_debit\":0,",
											"//                     \"current_total_credit\":0,",
											"//                     \"total_balance_amount\":0,",
											"//                 }",
											"//                 let month_obj = {",
											"//                     \"start_amount\":0,",
											"//                     \"end_amount\":0",
											"//                 }",
											"//                 for(let i in jsData.data.dates_data){",
											"//                     sum_table.current_total_debit += jsData.data.dates_data[i].debit_amount;",
											"//                     sum_table.current_total_credit += jsData.data.dates_data[i].credit_amount;",
											"",
											"//                     console.log(\"Date: \" + jsData.data.dates_data[i].date);",
											"//                     if(i != 0){",
											"//                         // start cá»§a ngÃ y hÃ´m nay láº£ end cá»§a ngÃ y hÃ´m trÆ°á»c",
											"//                         pm.test(\"--- start_amount must be \" + jsData.data.dates_data[i-1].end_amount, function () {",
											"//                             pm.expect(jsData.data.dates_data[i-1].end_amount).to.eql(jsData.data.dates_data[i].start_amount);",
											"//                         });",
											"",
											"//                         if(i == jsData.data.dates_data.length - 1){",
											"//                             month_obj.end_amount = jsData.data.dates_data[i].end_amount;",
											"//                         }",
											"//                     } else {",
											"//                         // start cá»§a ngÃ y Äáº§u thÃ¡ng lÃ  total_balance_amount cá»§a thÃ¡ng trÆ°á»c",
											"//                         pm.test(\"--- start_amount must be \" + chart_balance_change_last_month.total_balance_amount, function () {",
											"//                             pm.expect(chart_balance_change_last_month.total_balance_amount).to.eql(jsData.data.dates_data[i].start_amount);",
											"//                         });",
											"//                         month_obj.start_amount = chart_balance_change_last_month.total_balance_amount;",
											"//                     } ",
											"",
											"//                     // gap =  debit_amount - credit_amount",
											"//                     pm.test(\"--- gap must be \" + (jsData.data.dates_data[i].debit_amount - jsData.data.dates_data[i].credit_amount), function () {",
											"//                         // console.log(\"act gap: \" + jsData.data.dates_data[i].gap);",
											"//                         pm.expect(jsData.data.dates_data[i].gap).to.eql(jsData.data.dates_data[i].debit_amount - jsData.data.dates_data[i].credit_amount);",
											"//                     });",
											"",
											"//                     // end_amount = start_amount + gap",
											"//                     pm.test(\"--- end_amount must be \" + (jsData.data.dates_data[i].start_amount + jsData.data.dates_data[i].gap), function () {",
											"//                         pm.expect(jsData.data.dates_data[i].end_amount).to.eql(jsData.data.dates_data[i].start_amount + jsData.data.dates_data[i].gap);",
											"//                     });",
											"//                 }",
											"",
											"//                 // current_total_debit",
											"//                 pm.test(\"current_total_debit must be \" + sum_table.current_total_debit, function () {",
											"//                     pm.expect(jsData.data.sum_card_data.current_total_debit).to.eql(sum_table.current_total_debit);",
											"//                 });",
											"",
											"//                 // current_total_credit",
											"//                 pm.test(\"current_total_credit must be \" + sum_table.current_total_credit, function () {",
											"//                     pm.expect(jsData.data.sum_card_data.current_total_credit).to.eql(sum_table.current_total_credit);",
											"//                 });",
											"",
											"//                 // total_debit = last_month.total_debit + month.current_total_debit",
											"//                 // console.log(\"last month data: \", chart_balance_change_last_month);",
											"//                 pm.test(\"total_debit must be \" + (chart_balance_change_last_month.total_debit + sum_table.current_total_debit), function () {",
											"//                     pm.expect(jsData.data.sum_card_data.total_debit).to.eql(chart_balance_change_last_month.total_debit + sum_table.current_total_debit);",
											"//                 });",
											"",
											"//                 // total_credit = last_month.total_credit + month.current_total_credit",
											"//                 pm.test(\"total_credit must be \" + (chart_balance_change_last_month.total_credit + sum_table.current_total_credit), function () {",
											"//                     pm.expect(jsData.data.sum_card_data.total_credit).to.eql(chart_balance_change_last_month.total_credit + sum_table.current_total_credit);",
											"//                 });",
											"",
											"//                 // total_balance_amount = total_debit - total_credit",
											"//                 pm.test(\"total_balance_amount must be \" + (jsData.data.sum_card_data.total_debit - jsData.data.sum_card_data.total_credit), function () {",
											"//                     pm.expect(jsData.data.sum_card_data.total_balance_amount).to.eql(jsData.data.sum_card_data.total_debit - jsData.data.sum_card_data.total_credit);",
											"//                 });",
											"",
											"//                 pm.environment.set(\"C-month_obj\",month_obj);",
											"//                 postman.setNextRequest(\"get_forecast_dashboard\"); // get_forecast_dashboard",
											"//             }",
											"//             break;",
											"//         case 5:",
											"//             invoice_obj = pm.environment.get(\"C-invoice_obj\");",
											"//             invoice_date = invoice_obj.value_at.substring(0,10);",
											"//             // Invoice sáº½ tÄng profit (income), Bill sáº½ tÄng loss (chi phÃ­)",
											"            ",
											"//             break;",
											"//         case 8:",
											"//             invoice_obj = pm.environment.get(\"C-invoice_obj\");",
											"//             invoice_date = invoice_obj.value_at;",
											"//             console.log(\"invoice_date: \" + invoice_date);",
											"",
											"//             // let today = new Date();",
											"//             // let today_tmp = Math.floor(today.getTime()/1000);",
											"//             // let firstDayOfThisMonth = getFirstDayOfMonth(today_tmp);",
											"//             // let lastDayOfThisMonth = getLastDayOfMonth(today_tmp);",
											"//             // if(invoice_date < firstDayOfThisMonth || invoice_date > lastDayOfThisMonth){",
											"//             //     // nothing happen",
											"//             //     pm.test(\"Nothing happen!!!\", function () {",
											"//             //         pm.expect(JSON.stringify(profit_period) == JSON.stringify(old_profit_period)).to.be.true;",
											"//             //     });",
											"//             // } else {",
											"//             //     invoice_date = invoice_date.substring(0,10);",
											"",
											"//             //     let income_product = 0, income_discount = 0;",
											"//             //     for(let i in invoice_obj.items){",
											"//             //         income_product += invoice_obj.items[i].before_tax_amount;",
											"//             //         income_discount += invoice_obj.items[i].discount_amount;",
											"//             //     }",
											"//             //     let exp_change = income_product - income_discount;",
											"//             //     // cÃ³ thay Äá»i => total_income increase",
											"//             //     pm.test(\"total_income increase \" + exp_change, function () {",
											"//             //         pm.expect(profit_period.sum_card_data.total_income == old_profit_period.sum_card_data.total_income + exp_change).to.be.true;",
											"//             //     });",
											"//             //     // thay Äá»i ngÃ y tÆ°Æ¡ng á»©ng",
											"//             //     let old_date = null, act_date = null;",
											"//             //     for(let i in profit_period.dates_data){",
											"//             //         let day_i = profit_period.dates_data[i].date.substring(0,10);",
											"//             //         if(day_i == invoice_date){",
											"//             //             act_date = profit_period.dates_data[i];",
											"//             //             break;",
											"//             //         }",
											"//             //     }",
											"",
											"//             //     for(let i in old_profit_period.dates_data){",
											"//             //         let day_i = old_profit_period.dates_data[i].date.substring(0,10);",
											"//             //         if(day_i == invoice_date){",
											"//             //             old_date = old_profit_period.dates_data[i];",
											"//             //             break;",
											"//             //         }",
											"//             //     }",
											"",
											"//             //     if(old_date != null && act_date != null){",
											"//             //         console.log(\"act_date: \",act_date);",
											"//             //         console.log(\"old_date: \",old_date);",
											"//             //         pm.test(\"income at \" + invoice_date + \" increase \" + exp_change, function () {",
											"//             //             pm.expect(act_date.income == old_date.income + exp_change).to.be.true;",
											"//             //         });",
											"//             //     }",
											"//             // }",
											"",
											"//             let old_chart_balance_change = pm.environment.get(\"C-chart_balance_change\");",
											"//             chart_balance_change = jsData.data;",
											"//             pm.test(\"Nothing happen!!!\", function () {",
											"//                 pm.expect(JSON.stringify(old_chart_balance_change) == JSON.stringify(chart_balance_change)).to.be.true;",
											"//             });",
											"",
											"//             postman.setNextRequest(\"get_forecast_dashboard\"); // get_forecast_dashboard",
											"//             break;",
											"//         default:",
											"//             console.log(\"Missing flow, end test\");",
											"//             postman.setNextRequest(null);",
											"//             break;",
											"//     }",
											"// } else {",
											"//     console.log(\"Can't get chart balance change, end test\",jsData);",
											"//     postman.setNextRequest(null);",
											"// }",
											"",
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-balance-change",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-balance-change"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_chart_balance_change_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"         let   payload = {",
											"                \"business_id\": pm.environment.get(\"X-business_id\"),",
											"                \"branch_id\":pm.environment.get(\"X-branch_id\"),",
											"                \"period\": \"last_month\", // last_month, month",
											"                \"account_ids\": []",
											"            }",
											"       ",
											"console.log(\"payload: \", payload);",
											"pm.environment.set(\"C-payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-balance-change",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-balance-change"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_forecast_dashboard",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/forecast-dashboard",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"forecast-dashboard"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_forecast_dashboard_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"branch_id\":pm.environment.get(\"X-branch_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/forecast-dashboard",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"forecast-dashboard"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "cash_flow_widget",
					"item": [
						{
							"name": "get_list_branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let branch_view = data.branch_view;",
											"console.log(\"branch_view: \" + branch_view);",
											"",
											"const jsData = pm.response.json();",
											"let branch_id = jsData.data[0].id;",
											"pm.environment.set(\"X-branch_id\", branch_id);",
											"if(branch_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let branch_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-branch_id\",branch_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?business_id={{C-business_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-business",
										"api",
										"v1",
										"branch",
										"get-list"
									],
									"query": [
										{
											"key": "business_id",
											"value": "{{C-business_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_cash_flow_chart",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"period\": \"month\"",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let cash_flow_report_view = data.cash_flow_report_view;",
											"console.log(\"cash_flow_report_view: \" + cash_flow_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(cash_flow_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/cash-flow-period",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"cash-flow-period"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_cash_flow_chart_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"branch_id\": pm.environment.get(\"X-branch_id\"),",
											"    \"period\": \"month\"",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let cash_flow_report_view = data.cash_flow_report_view;",
											"console.log(\"cash_flow_report_view: \" + cash_flow_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(cash_flow_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "x-locale",
										"value": "en"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/cash-flow-period",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"cash-flow-period"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_cash_flow_table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let cash_flow_report_view = data.cash_flow_report_view;",
											"console.log(\"cash_flow_report_view: \" + cash_flow_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(cash_flow_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/cash-flow-detail",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"cash-flow-detail"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_cash_flow_table_branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let cash_flow_report_view = data.cash_flow_report_view;",
											"console.log(\"cash_flow_report_view: \" + cash_flow_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(cash_flow_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"branch_id\":pm.environment.get(\"X-branch_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/cash-flow-detail",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"cash-flow-detail"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "invoice_widget",
					"item": [
						{
							"name": "get_receivable_invoice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let payload = {",
											"    \"account_key\": \"A3001\", // account_receivable => A3001, account_payable => B1001",
											"    // \"branch_id\": pm.environment.get(\"C-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\")",
											"    //   \"current_period_end\": \"string\",",
											"    //   \"current_period_start\": \"string\",",
											"    // \"page\": 1,",
											"    // \"page_size\": 20,",
											"    //   \"period\": \"string\",  // old due_days",
											"    //   \"previous_period_end\": \"string\",",
											"    //   \"previous_period_start\": \"string\",",
											"    //   \"report_type\": \"string\",",
											"    // \"timezone\": \"UTC+07:00\"",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/account-receivable-card-unpaid",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-card-unpaid"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_receivable_customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"account_key\": \"A3001\",",
											"    \"branch_id\": pm.environment.get(\"X-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"   ",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/account-receivable-customer-unpaid",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-customer-unpaid"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "bill_widget",
					"item": [
						{
							"name": "get_payable_bill",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let payload = {",
											"    \"account_key\": \"B1001\", // account_receivable => A3001, account_payable => B1001",
											"    // \"branch_id\": pm.environment.get(\"C-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\")",
											"    //   \"current_period_end\": \"string\",",
											"    //   \"current_period_start\": \"string\",",
											"    // \"page\": 1,",
											"    // \"page_size\": 20,",
											"    //   \"period\": \"string\",  // old due_days",
											"    //   \"previous_period_end\": \"string\",",
											"    //   \"previous_period_start\": \"string\",",
											"    //   \"report_type\": \"string\",",
											"    // \"timezone\": \"UTC+07:00\"",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/account-receivable-card-unpaid",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-card-unpaid"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_payable_supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"account_key\": \"B1001\",",
											"    \"branch_id\": pm.environment.get(\"X-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"   ",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/account-receivable-customer-unpaid",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-customer-unpaid"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "P_n_L",
					"item": [
						{
							"name": "get_list_branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let branch_view = data.branch_view;",
											"console.log(\"branch_view: \" + branch_view);",
											"",
											"const jsData = pm.response.json();",
											"let branch_id = jsData.data[0].id;",
											"pm.environment.set(\"X-branch_id\", branch_id);",
											"if(branch_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let branch_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-branch_id\",branch_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?business_id={{C-business_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-business",
										"api",
										"v1",
										"branch",
										"get-list"
									],
									"query": [
										{
											"key": "business_id",
											"value": "{{C-business_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_profit_n_loss",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-profit-loss-detail",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-profit-loss-detail"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_profit_n_loss_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"branch_id\":pm.environment.get(\"X-branch_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.envizronment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-profit-loss-detail",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-profit-loss-detail"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "sales",
					"item": [
						{
							"name": "get_list_branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let branch_view = data.branch_view;",
											"console.log(\"branch_view: \" + branch_view);",
											"",
											"const jsData = pm.response.json();",
											"let branch_id = jsData.data[0].id;",
											"pm.environment.set(\"X-branch_id\", branch_id);",
											"if(branch_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let branch_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-branch_id\",branch_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-business/api/v1/branch/get-list?business_id={{C-business_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-business",
										"api",
										"v1",
										"branch",
										"get-list"
									],
									"query": [
										{
											"key": "business_id",
											"value": "{{C-business_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_profit_chart",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"period\": \"month\",",
											"    \"report_type\": \"profit\" // expense, profit",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.envizronment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-location-timezone",
										"value": "Asia/Saigon"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/profit-loss-period",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"profit-loss-period"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_profit_chart_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let testcase = pm.environment.get(\"C-testcase\");",
											"console.log(\"Testcase: \" + testcase);",
											"",
											"let payload = {",
											"    \"business_id\": parseInt(pm.environment.get(\"X-business_id\")),",
											"    \"branch_id\": pm.environment.get(\"X-branch_id\"),",
											"    \"period\": \"month\",",
											"    \"report_type\": \"profit\" // expense, profit",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.envizronment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-location-timezone",
										"value": "Asia/Saigon"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/profit-loss-period",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"profit-loss-period"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_income_report",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let payload = {",
											"    // \"branch_id\": pm.environment.get(\"C-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"report_type\": \"income\",",
											"    \"period\": \"month\"",
											"    // \"current_period_start\": current_period_start,",
											"    // \"current_period_end\": current_period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/summary-by-category",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"summary-by-category"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_income_report_branch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let payload = {",
											"    // \"branch_id\": pm.environment.get(\"C-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"report_type\": \"income\",",
											"    \"period\": \"month\"",
											"    // \"current_period_start\": current_period_start,",
											"    // \"current_period_end\": current_period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let pl_report_view = data.pl_report_view;",
											"console.log(\"pl_report_view: \" + pl_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(pl_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/summary-by-category",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"summary-by-category"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_product_report",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let configs = pm.environment.get(\"X-configs\");",
											"let period_start = configs.period_start;",
											"let period_end = configs.period_end;",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"current_period_start\": period_start,",
											"    \"current_period_end\": period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/top-selling-product",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"top-selling-product"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "expenses",
					"item": [
						{
							"name": "get_expense_chart",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"period\": \"month\",",
											"    \"report_type\": \"expense\"",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-location-timezone",
										"value": "Asia/Saigon"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/profit-loss-period",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"profit-loss-period"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_expense_report",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"let payload = {",
											"    // \"branch_id\": pm.environment.get(\"C-branch_id\"),",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"report_type\": \"expense\",",
											"    \"period\": \"month\"",
											"    // \"current_period_start\": current_period_start,",
											"    // \"current_period_end\": current_period_end",
											"}",
											"",
											"console.log(\"payload: \",payload);",
											"pm.environment.set(\"C-payload\",JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let homepage_view = data.homepage_view;",
											"console.log(\"homepage_view: \" + homepage_view);",
											"",
											"const jsData = pm.response.json();",
											"if(homepage_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{C-payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/summary-by-category",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"summary-by-category"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "finan_report",
					"item": [
						{
							"name": "cash_flow_report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let cash_flow_report_view = data.cash_flow_report_view;",
											"console.log(\"cash_flow_report_view: \" + cash_flow_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(cash_flow_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"current_period_start\": \"2024-09-30T17:00:00.000Z\",",
											"    \"current_period_end\": \"2024-10-31T16:59:59.999Z\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/account",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "chart_balance_change_account_NoPhaiThu",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"report_type\": \"A3001\",",
											"    \"current_period_start\": \"2024-09-30T17:00:00.000Z\",",
											"    \"current_period_end\": \"2024-10-31T16:59:59.999Z\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let ar_report_view = data.ar_report_view;",
											"console.log(\"ar_report_view: \" + ar_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(ar_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJGTyBVc2VyIiwic3ViIjoiNTFmZTE3N2MtNDBmZS00MzJlLWI3OTktMWZhNjE0MjEwN2M4IiwiYXVkIjpbIkZPIFVzZXIiXSwiZXhwIjoxNzMwOTYzMTcwLCJuYmYiOjE3MjgzNzExNzAsImlhdCI6MTcyODM3MTE3MCwib3JnX2lkIjoiMzA1IiwiYnVzaW5lc3NfaWQiOiIzMDUiLCJkZXZpY2VfaWQiOiI2ZDg1MzhmYS02MjczLTQ0MjAtOTFkMC1lYTdkNGE2NDVjMTMiLCJwbGF0Zm9ybV9rZXkiOiJ3ZWItYm9vayIsInVzZXJfaWQiOiI1MWZlMTc3Yy00MGZlLTQzMmUtYjc5OS0xZmE2MTQyMTA3YzgiLCJsb2dpbl9tZXRob2QiOiJwYXNzd29yZCIsImFwcF92ZXJzaW9uIjoiMS4xLjEiLCJzZWN1cml0eV9yb2xlIjowLCJyZWZyZXNoX3Rva2VuX2lkIjoiYTVkNzM4YmYtNTkxNC00YmI4LTg3NzMtNThmZTgxZDE0Mjg1In0.FNzq_kfsz_J-8iyAveI4bhZgDGAPsSyEt_ANUnpadBw"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-balance-change-account",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-balance-change-account"
									]
								}
							},
							"response": []
						},
						{
							"name": "account_receivable_card_unpaid_NoPhaiThu",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"account_key\": \"A3001\",",
											"    \"current_period_start\": \"2024-09-30T17:00:00.000Z\",",
											"    \"current_period_end\": \"2024-10-31T16:59:59.999Z\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let ar_report_view = data.ar_report_view;",
											"console.log(\"ar_report_view: \" + ar_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(ar_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-order/api/v1/report/account-receivable-card-unpaid",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-card-unpaid"
									]
								}
							},
							"response": []
						},
						{
							"name": "account_receivable_card_unpaid_NoPhaiTra",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"account_key\": \"B1001\",",
											"    \"current_period_start\": \"2024-09-30T17:00:00.000Z\",",
											"    \"current_period_end\": \"2024-10-31T16:59:59.999Z\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let ap_report_view = data.ap_report_view;",
											"console.log(\"ap_report_view: \" + ap_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(ap_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://stg-api.finan.one/fo-order/api/v1/report/account-receivable-card-unpaid",
									"protocol": "https",
									"host": [
										"stg-api",
										"finan",
										"one"
									],
									"path": [
										"fo-order",
										"api",
										"v1",
										"report",
										"account-receivable-card-unpaid"
									]
								}
							},
							"response": []
						},
						{
							"name": "chart_balance_change_account_NoPhaiTra",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let ap_report_view = data.ap_report_view;",
											"console.log(\"ap_report_view: \" + ap_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(ap_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    //\"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"report_type\": \"B1001\",",
											"    \"current_period_start\": \"2024-09-30T17:00:00.000Z\",",
											"    \"current_period_end\": \"2024-10-31T16:59:59.999Z\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-balance-change-account",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-balance-change-account"
									]
								}
							},
							"response": []
						},
						{
							"name": "report_forecast",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let ap_report_view = data.ap_report_view;",
											"console.log(\"ap_report_view: \" + ap_report_view);",
											"",
											"const jsData = pm.response.json();",
											"if(ap_report_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    // let business_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    // pm.environment.set(\"C-business_id\",business_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/forecast-dashboard",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"forecast-dashboard"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "recent_transactions",
					"item": [],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"/**",
									" * chá» cáº§n check UI vÃ¬ á» ÄÃ¢y lÃ  API tráº£",
									" *  - list transaction",
									" *  - list invoice (!= fully_paid)",
									" *  - list bill (!= fully_paid)",
									" */"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"let configs = {",
							"    \"period_start\" : \"2024-09-30T17:00:00.000Z\",",
							"    \"period_end\" : \"2024-10-31T16:59:59.999Z\"",
							"}",
							"pm.environment.set(\"X-configs\", configs)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "fund",
			"item": [
				{
					"name": "overview",
					"item": [
						{
							"name": "get_list_fund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let fund_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-fund_id\",fund_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-list-sub?sub_account_key=A1%2CA6%2CA7%2CA5&option=all",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-list-sub"
									],
									"query": [
										{
											"key": "sub_account_key",
											"value": "A1%2CA6%2CA7%2CA5"
										},
										{
											"key": "option",
											"value": "all"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chart_balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let payload = {",
											"    \"business_id\": pm.environment.get(\"X-business_id\"),",
											"    \"account_ids\": [],",
											"    \"period\": \"month\"",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    let list_func = eval(pm.environment.get(\"list_common_func\"));",
											"    let fund_id = jsData.data[list_func.getRandomInt(0,jsData.data.length - 1)].id;",
											"    pm.environment.set(\"C-fund_id\",fund_id);",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/report/chart-balance-change",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"report",
										"chart-balance-change"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "cash",
					"item": [
						{
							"name": "create_fund",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomChars(length) {",
											"    var result           = '';",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
											"    var charactersLength = characters.length;",
											"    for ( var i = 0; i < length; i++ ) {",
											"      result += characters.charAt(Math.floor(Math.random() * ",
											" charactersLength));",
											"   }",
											"   return result;",
											"}",
											"let payload = {",
											"    \"account_name\": \"Tiá»n Än cÆ°á»i \" + randomChars(5),",
											"    \"open_amount\": 0,",
											"    //\"balance_at_date\": \"2024-10-10T02:49:33.389Z\",",
											"    \"parent_account_id\": 1,",
											"    \"business_id\": pm.environment.get(\"X-business_id\")",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_create == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"",
											"    if(pm.response.code == 200){",
											"        let fund_id = jsData.data.id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"    } else {",
											"        console.log(\"debug: \", jsData);",
											"    }",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"console.log(\"Contact id : \",pm.environment.get(\"X-fund_id\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/create",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_fund_owner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomChars(length) {",
											"    var result           = '';",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
											"    var charactersLength = characters.length;",
											"    for ( var i = 0; i < length; i++ ) {",
											"      result += characters.charAt(Math.floor(Math.random() * ",
											" charactersLength));",
											"   }",
											"   return result;",
											"}",
											"let payload = {",
											"    \"account_name\": \"Tiá»n Än cÆ°á»i \" + randomChars(5),",
											"    \"open_amount\": 0,",
											"    //\"balance_at_date\": \"2024-10-10T02:49:33.389Z\",",
											"    \"parent_account_id\": 1,",
											"    \"business_id\": pm.environment.get(\"X-business_id\")",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"",
											"        let fund_id = jsData.data.id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"   ",
											"console.log(\"Fund id : \",pm.environment.get(\"X-fund_id\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/create",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_fund_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-one/{{X-fund_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-one",
										"{{X-fund_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "edit_fund",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomChars(length) {",
											"    var result           = '';",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
											"    var charactersLength = characters.length;",
											"    for ( var i = 0; i < length; i++ ) {",
											"      result += characters.charAt(Math.floor(Math.random() * ",
											" charactersLength));",
											"   }",
											"   return result;",
											"}",
											"let payload = {",
											"    \"account_name\": \"Edit Tiá»n Än cÆ°á»i \" + randomChars(5),",
											"    \"open_amount\": 0,",
											"    //\"balance_at_date\": \"2024-10-10T02:49:33.389Z\",",
											"    \"parent_account_id\": 1,",
											"    \"business_id\": pm.environment.get(\"X-business_id\")",
											"}",
											"pm.environment.set(\"payload\", JSON.stringify(payload));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_update = data.fund_update;",
											"console.log(\"fund_update: \" + fund_update);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_update == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-fund_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-fund_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_fund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_delete = data.fund_delete;",
											"console.log(\"fund_delete: \" + fund_delete);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_delete == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"pm.environment.unset(\"C-fund_id\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"closed\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-fund_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-fund_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconnect_fund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_update = data.fund_update;",
											"console.log(\"fund_update: \" + fund_update);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_update == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"open\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-fund_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-fund_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "MB_bank",
					"item": [
						{
							"name": "verify_accountMB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_create == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"",
											"    if(pm.response.code == 200){",
											"        let fund_id = jsData.data.id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"    } else {",
											"        console.log(\"debug: \", jsData);",
											"    }",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"console.log(\"Contact id : \",pm.environment.get(\"X-fund_id\")); "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"account_name\":\"NGUYEN VAN A\",\"account_number\":\"5729334769767\",\"bank_id\":\"311\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/viet-qr-pro/verify-account",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"viet-qr-pro",
										"verify-account"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_list_payment_account",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let testcase = pm.environment.get(\"C-testcase\");",
											"console.log(\"Testcase: \" + testcase);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsData = pm.response.json();",
											"let mb_bank_id = jsData.data[0].accounts[0].id;",
											"pm.environment.set(\"X-mb_id\", mb_bank_id);",
											"console.log(pm.environment.get(\"X-mb_id\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{C-admin_token}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-list-sub?business_id={{X-business_id}}&sub_account_key=A1&account_type=link_bank&bank_code=311",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-list-sub"
									],
									"query": [
										{
											"key": "business_id",
											"value": "{{X-business_id}}"
										},
										{
											"key": "sub_account_key",
											"value": "A1"
										},
										{
											"key": "account_type",
											"value": "link_bank",
											"description": "system, default, manual"
										},
										{
											"key": "bank_code",
											"value": "311"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_mb_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-one/{{X-mb_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-one",
										"{{X-mb_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_mb_alias_list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"let mb_alias_id = jsData.data[0].id;",
											"pm.environment.set(\"X-mb_alias_id\", mb_alias_id);",
											"",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-list?parent_account_id={{X-mb_id}}&is_alias=true&business_id={{X-business_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-list"
									],
									"query": [
										{
											"key": "parent_account_id",
											"value": "{{X-mb_id}}"
										},
										{
											"key": "is_alias",
											"value": "true"
										},
										{
											"key": "business_id",
											"value": "{{X-business_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_mb_alias_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/get-one/{{X-mb_alias_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"get-one",
										"{{X-mb_alias_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_mb",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_delete = data.fund_delete;",
											"console.log(\"fund_delete: \" + fund_delete);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_delete == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"pm.environment.unset(\"C-fund_id\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"closed\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-mb_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-mb_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconnect_mb",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_update = data.fund_update;",
											"console.log(\"fund_update: \" + fund_update);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_update == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"pm.environment.unset(\"C-fund_id\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"open\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-mb_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-mb_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "shinhan",
					"item": [
						{
							"name": "create_shinhan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_create == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"",
											"    if(pm.response.code == 200){",
											"        let fund_id = jsData.data.account_id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"    } else {",
											"        console.log(\"debug: \", jsData);",
											"    }",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"console.log(\"Contact id : \",pm.environment.get(\"X-fund_id\")); "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"bank_account_name\":\"Quá»¹ shinhan tá»« thiá»n\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/bank-account/create",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"bank-account",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_shinhan_owner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"",
											"        let fund_id = jsData.data.account_id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"   ",
											"console.log(\"Fund id : \",pm.environment.get(\"X-fund_id\")); "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"bank_account_name\":\"Quá»¹ shinhan tá»« thiá»n\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/bank-account/create",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"bank-account",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_shinhan_overview_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/overview?account_type=va_bank",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"overview"
									],
									"query": [
										{
											"key": "account_type",
											"value": "va_bank"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_shinhan_subaccount_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsData = pm.response.json();",
											"let X_shinhan_id = jsData.data[0].reference_id;",
											"pm.environment.set(\"X-shinhan_id\", X_shinhan_id);",
											"",
											"",
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/bank-account/get-list",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"bank-account",
										"get-list"
									],
									"query": [
										{
											"key": "usage_type",
											"value": "merchant_host",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get_shinhan_va_detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_view = data.fund_view;",
											"console.log(\"fund_view: \" + fund_view);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_view == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/bank-account/get-one/{{X-shinhan_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"bank-account",
										"get-one",
										"{{X-shinhan_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_shinhan_va",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_delete = data.fund_delete;",
											"console.log(\"fund_delete: \" + fund_delete);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_delete == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"pm.environment.unset(\"C-fund_id\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"closed\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-shinhan_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-shinhan_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconnect_shinhan_va",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_update = data.fund_update;",
											"console.log(\"fund_update: \" + fund_update);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_update == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"pm.environment.unset(\"C-fund_id\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"open\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-ledger/api/v1/account/update/{{X-shinhan_id}}",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-ledger",
										"api",
										"v1",
										"account",
										"update",
										"{{X-shinhan_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BIDV",
					"item": [
						{
							"name": "verify_accountBIDV",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let fund_create = data.fund_create;",
											"console.log(\"fund_create: \" + fund_create);",
											"",
											"const jsData = pm.response.json();",
											"if(fund_create == 1){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
											"    });",
											"",
											"    if(pm.response.code == 200){",
											"        let fund_id = jsData.data.id;",
											"        pm.environment.set(\"X-fund_id\",fund_id);",
											"    } else {",
											"        console.log(\"debug: \", jsData);",
											"    }",
											"} else {",
											"    pm.test(\"Status code is 403\", function () {",
											"        pm.response.to.have.status(403);",
											"    });",
											"",
											"    pm.test(\"message: \" + jsData.message.content, function () {",
											"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
											"    });",
											"}",
											"console.log(\"Contact id : \",pm.environment.get(\"X-fund_id\")); "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "accept-language",
										"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer {{C-userToken}}"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://book-stg.finan.one"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://book-stg.finan.one/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
									},
									{
										"key": "x-locale",
										"value": "vi"
									},
									{
										"key": "x-location-timezone",
										"value": "Asia/Ho_Chi_Minh"
									},
									{
										"key": "x-platform-key",
										"value": "desktop-web"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"NGUYEN MINH HIEU\",\n    \"account_number\": \"8820789162\",\n    \"id_number\": \"044096001367\",\n    \"phone_number\": \"0384133596\",\n    \"bank_id\": \"202\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{finone_url}}/fo-banking/api/v1/viet-qr-pro/linking",
									"host": [
										"{{finone_url}}"
									],
									"path": [
										"fo-banking",
										"api",
										"v1",
										"viet-qr-pro",
										"linking"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "transaction",
			"item": [
				{
					"name": "get_list_fund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let fund_view = data.fund_view;",
									"console.log(\"fund_view: \" + fund_view);",
									"",
									"const jsData = pm.response.json();",
									"let cash_on_hand_id;",
									"for(let i in jsData.data ){",
									"    for(let j in jsData.data[i].accounts)",
									"    if (jsData.data[i].accounts[j].account_type == \"default\" && jsData.data[i].accounts[j].account_key == \"A1001\")",
									"            cash_on_hand_id = jsData.data[i].accounts[j].id;",
									"}",
									"console.log(\"cash_on_hand_id \", cash_on_hand_id);",
									"pm.environment.set(\"X-cash_on_hand_id\", cash_on_hand_id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"url": {
							"raw": "https://stg-api.finan.one/fo-ledger/api/v1/account/get-list-sub?sub_account_key=A1%2CA6%2CA7%2CA5&option=all",
							"protocol": "https",
							"host": [
								"stg-api",
								"finan",
								"one"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"account",
								"get-list-sub"
							],
							"query": [
								{
									"key": "sub_account_key",
									"value": "A1%2CA6%2CA7%2CA5"
								},
								{
									"key": "option",
									"value": "all"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_income_transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_create = data.transaction_create;",
									"console.log(\"transaction_create: \" + transaction_create);",
									"",
									"const jsData = pm.response.json();",
									"if(transaction_create == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    if(pm.response.code == 200){",
									"        let transaction_id = jsData.data.id;",
									"        pm.environment.set(\"X-transaction_id\",transaction_id);",
									"    } else {",
									"        console.log(\"debug: \", jsData);",
									"    }",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"console.log(\"--------Transaction id : \",pm.environment.get(\"X-transaction_id\")); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": {{X-cash_on_hand_id}},\n    \"amount\": 10000,\n    \"txn_type\": \"in\",\n    \"description\": \"\",\n    \"contact_id\": null,\n    \"branch_id\": null,\n    \"object_id\": null,\n    \"object_type\": \"\",\n    \"category_id\": 1010016,\n    \"tax_amount\": 0,\n    \"tax_id\": null,\n    \"attachment_url\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_transaction_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_view = data.transaction_view;",
									"console.log(\"transaction_view: \" + transaction_view);",
									"",
									"const jsData = pm.response.json();",
									"let transaction_create= data.transaction_create;",
									"if(transaction_create == 0){",
									"    let transaction_id = jsData.data[0].id;",
									"    pm.environment.set(\"X-transaction_id\",transaction_id);",
									"}",
									"",
									"if(transaction_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"",
									"    ",
									"",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"console.log(\"-------Transaction id \", pm.environment.get(\"X-transaction_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-US,en;q=0.9,vi;q=0.8,eu;q=0.7"
							},
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							},
							{
								"key": "origin",
								"value": "https://book-stg.finan.one"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://book-stg.finan.one/"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
							},
							{
								"key": "x-locale",
								"value": "vi"
							},
							{
								"key": "x-location-timezone",
								"value": "Asia/Ho_Chi_Minh"
							},
							{
								"key": "x-platform-key",
								"value": "desktop-web"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/get-list?page=1&page_size=10&business_id={{X-business_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"get-list"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "10"
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "txn_type",
									"value": "",
									"disabled": true
								},
								{
									"key": "category_ids",
									"value": "",
									"disabled": true
								},
								{
									"key": "start_time",
									"value": "2024-09-30T17%3A00%3A00.000Z",
									"disabled": true
								},
								{
									"key": "end_time",
									"value": "2024-10-31T16%3A59%3A59.999Z",
									"disabled": true
								},
								{
									"key": "business_id",
									"value": "{{X-business_id}}"
								},
								{
									"key": "created_by",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create_income_transaction_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_create = data.transaction_create;",
									"console.log(\"transaction_create: \" + transaction_create);",
									"",
									"const jsData = pm.response.json();",
									"",
									"let transaction_id = jsData.data.id;",
									"pm.environment.set(\"X-transaction_id\",transaction_id);",
									"   ",
									"console.log(\"--------Transaction id : \",pm.environment.get(\"X-transaction_id\")); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": {{X-cash_on_hand_id}},\n    \"amount\": 10000,\n    \"txn_type\": \"in\",\n    \"description\": \"\",\n    \"contact_id\": null,\n    \"branch_id\": null,\n    \"object_id\": null,\n    \"object_type\": \"\",\n    \"category_id\": 1010016,\n    \"tax_amount\": 0,\n    \"tax_id\": null,\n    \"attachment_url\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/create",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_transaction_detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_view = data.transaction_view;",
									"console.log(\"transaction_view: \" + transaction_view);",
									"",
									"const jsData = pm.response.json();",
									"if(transaction_view == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/get-one/{{X-transaction_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"get-one",
								"{{X-transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit_transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_update = data.transaction_update;",
									"console.log(\"transaction_update: \" + transaction_update);",
									"",
									"const jsData = pm.response.json();",
									"if(transaction_update == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": {{X-cash_on_hand_id}},\n    \"amount\": 20000,\n    \"txn_type\": \"out\",\n    \"description\": \"\",\n    \"value_at\": \"2024-10-10T07:25:52.147Z\",\n    \"contact_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"branch_id\": null,\n    \"object_id\": null,\n    \"object_type\": \"\",\n    \"category_id\": 1010033,\n    \"tax_amount\": 0,\n    \"tax_id\": null,\n    \"attachment_url\": [],\n    \"transaction_code\": \"CO1024001\",\n    \"business_id\": 305\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/update/{{X-transaction_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"update",
								"{{X-transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_delete = data.transaction_delete;",
									"console.log(\"transaction_delete: \" + transaction_delete);",
									"",
									"const jsData = pm.response.json();",
									"if(transaction_delete == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}",
									"pm.environment.unset(\"X-transaction_id\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/delete/{{X-transaction_id}}",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"delete",
								"{{X-transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "export_transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let transaction_export = data.transaction_export;",
									"console.log(\"transaction_export: \" + transaction_export);",
									"",
									"const jsData = pm.response.json();",
									"if(transaction_export == 1){",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.true;",
									"    });",
									"} else {",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"",
									"    pm.test(\"message: \" + jsData.message.content, function () {",
									"        pm.expect(jsData.message.content.includes(\"thÃ nh cÃ´ng\")).to.be.false;",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{C-userToken}}"
							}
						],
						"url": {
							"raw": "{{finone_url}}/fo-ledger/api/v1/transaction/export?file_template=standard&file_format=xlsx",
							"host": [
								"{{finone_url}}"
							],
							"path": [
								"fo-ledger",
								"api",
								"v1",
								"transaction",
								"export"
							],
							"query": [
								{
									"key": "file_template",
									"value": "standard"
								},
								{
									"key": "file_format",
									"value": "xlsx"
								},
								{
									"key": "category_ids",
									"value": "",
									"disabled": true
								},
								{
									"key": "account_ids",
									"value": "",
									"disabled": true
								},
								{
									"key": "object_type",
									"value": "invoice",
									"disabled": true
								},
								{
									"key": "object_type",
									"value": "bill",
									"disabled": true
								},
								{
									"key": "txn_type",
									"value": "in%2Cout",
									"disabled": true
								},
								{
									"key": "is_internal_transfer",
									"value": "true",
									"disabled": true
								},
								{
									"key": "start_time",
									"value": "2024-09-30T17%3A00%3A00.000Z",
									"disabled": true
								},
								{
									"key": "end_time",
									"value": "2024-10-31T16%3A59%3A59.999Z",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "staff",
			"item": []
		},
		{
			"name": "role",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"let configs = {",
					"    \"is_use_email\":false,",
					"    \"limit_page\":5,",
					"    \"timeout\":1000, // miliseconds => timeout to call API",
					"    \"is_buyer_gen\":false,",
					"    \"is_the_same_branch\":true, // true: branch táº¡o invoice vÃ  branch check lÃ  giá»ng nhau, false: khÃ¡c nhau",
					"    \"is_check_report\":true,",
					"    \"test_payment_method\":\"va_galaxy\" // bank_transfer, viet_qr_pro_mb, va_galaxy",
					"}",
					"",
					"pm.environment.set(\"C-configs\",configs);",
					"// console.log(\"configs: \",configs);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// ====================================== parser cURL",
					"function parseCURL(request_api){",
					"    let curl = \"\";",
					"    switch(request_api.method){",
					"        case \"PUT\":",
					"            curl = \"curl --location --request PUT \";",
					"            break;",
					"        case \"PATCH\":",
					"            curl = \"curl --location --request PATCH \";",
					"            break;",
					"        case \"DELETE\":",
					"            curl = \"curl --location --request DELETE \";",
					"            break;",
					"        default:",
					"            curl = \"curl --location \";",
					"            break;",
					"    }",
					"    curl += \"'\" + request_api.url.protocol + \"://\"",
					"",
					"    // host",
					"    for(let i in request_api.url.host){",
					"        if(i >= request_api.url.host.length - 1){",
					"            curl += request_api.url.host[i] + \"/\";",
					"        } else {",
					"            curl += request_api.url.host[i] + \".\";",
					"        }",
					"    }",
					"    // path",
					"    for(let i in request_api.url.path){",
					"        if(i >= request_api.url.path.length - 1){",
					"            curl += request_api.url.path[i];",
					"        } else {",
					"            curl += request_api.url.path[i] + \"/\";",
					"        }",
					"    }",
					"    // query (if have)",
					"    if(\"query\" in request_api.url){",
					"        if(request_api.url.query.length > 0){",
					"            curl += \"?\";",
					"            for(let i in request_api.url.query){",
					"                if(i >= request_api.url.query.length - 1){",
					"                    curl += request_api.url.query[i].key + \"=\" + request_api.url.query[i].value + \"' \";",
					"                } else {",
					"                    curl += request_api.url.query[i].key + \"=\" + request_api.url.query[i].value + \"&\";",
					"                }",
					"            }",
					"        } else {",
					"            curl += \"' \";",
					"        }",
					"    } else {",
					"        curl += \"' \";",
					"    }",
					"    // header",
					"    for(let i in request_api.header){",
					"        if(i >= request_api.header.length - 1){",
					"            curl += \"--header '\" + request_api.header[i].key + \": \" + request_api.header[i].value + \"'\";",
					"        } else {",
					"            curl += \"--header '\" + request_api.header[i].key + \": \" + request_api.header[i].value + \"' \";",
					"        }",
					"    }",
					"    switch(request_api.method){",
					"        case \"POST\":",
					"            curl += \" --data '\" + request_api.body.raw + \"'\"",
					"            break;",
					"        case \"PUT\": case \"PATCH\":",
					"            curl += \" --data-raw '\" + request_api.body.raw + \"'\"",
					"            break;",
					"        default:",
					"            break;",
					"    }",
					"    console.log(curl);",
					"    return curl;",
					"}",
					"const request_api = pm.request.toJSON();",
					"// console.log(\"request_api\",request_api);",
					"parseCURL(request_api);"
				]
			}
		}
	]
}